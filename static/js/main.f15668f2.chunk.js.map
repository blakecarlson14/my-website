{"version":3,"sources":["components/Navbar/Navbar.js","pages/home/Home.js","pages/projects/meme-generator/images/troll-face.png","pages/projects/meme-generator/components/Header.js","pages/projects/meme-generator/components/Meme.js","pages/projects/meme-generator/MemeGenerator.js","pages/projects/bitcoin-tester/BitcoinTester.js","pages/projects/crypto-charts/CryptoCharts.js","pages/projects/mtg/components/MtgForm.js","pages/projects/mtg/Mtg.js","pages/projects/lol/components/LolChampGrid.js","pages/projects/lol/Lol.js","pages/projects/lol/LolChampions.js","pages/projects/chatgpt/ChatGpt.jsx","App.js","index.js"],"names":["Navbar","navigate","useNavigate","_jsxs","Menu","children","_jsx","Item","onClick","Dropdown","text","pointing","className","DropdownHeader","DropdownDivider","DropdownItem","Home","Header","src","trollFace","Meme","_React$useState","React","useState","topText","bottomText","randomImage","_React$useState2","_slicedToArray","meme","setMeme","_React$useState3","_React$useState4","allMemes","setAllMemes","handleChange","event","_event$target","target","name","value","prevMeme","_objectSpread","_defineProperty","useEffect","_getMemes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","memes","stop","apply","arguments","getMemes","type","placeholder","onChange","randomNumber","Math","floor","random","length","url","Image","MemeGenerator","BitcoinTester","topCoins","setTopCoins","coinPrices","setCoinPrices","_React$useState5","_React$useState6","coin","_useState","_useState2","handleSubmit","inputs","preventDefault","console","log","_getTopCoins","getTopCoins","_getPrices","_callee2","time","_context2","Date","now","concat","id","prices","getPrices","dropdownOptions","map","entry","obj","symbol","toUpperCase","push","undefined","result","i","day","futureDate","getFullYear","getMonth","getDate","futureDays","moment","diff","currentPrice","change","date","Form","widths","size","onSubmit","Select","label","options","Input","fluid","Button","ResponsiveContainer","height","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","timeStr","format","domain","scale","YAxis","Label","position","angle","Line","dot","Tooltip","formatter","toFixed","labelFormatter","cursor","CryptoCharts","yScale","setYScale","setCoin","_React$useState7","_React$useState8","yearTicks","price","slice","topCoin","ticks","offset","stroke","Segment","Dimmer","active","Loader","initialState","whiteCheck","blackCheck","blueCheck","greenCheck","redCheck","andor","cmc","power","toughness","legal","set","commonCheck","uncommonCheck","rareCheck","mythicRareCheck","currency","currencyCompare","MtgForm","_ref","isFetching","setInputs","e","_e$target","handleCheck","_e$target2","checked","Grid","item","FormControl","TextField","style","sx","flexDirection","FormControlLabel","control","Checkbox","marginLeft","select","MenuItem","width","marginTop","marginBottom","fullWidth","InputProps","startAdornment","InputAdornment","LoadingButton","loading","variant","color","Mtg","cards","setCards","setIsFetching","input","getScryfallCards","nextPage","colorString","colors","join","lookup","encodeURIComponent","rarityString","rarities","priceString","lookupString","then","response","_toConsumableArray","has_more","setTimeout","next_page","error","ImageList","cols","card","_card$image_uris","_card$image_uris2","_card$card_faces$","_card$card_faces$2","image_uris","normal","ImageListItem","card_faces","LolChampGrid","props","championData","version","champClickHandler","Object","entries","_data$image","_data$image2","image","full","Lol","state","setState","fetchChampData","versionResponse","versionResponseJson","curVersion","champResponse","champResponseJson","cache","ok","t0","champId","LolChampions","_state$championData","_state$championData2","_state$championData3","_state$championData3$","_state$championData4","_state$championData4$","_state$championData5","_state$championData6","window","location","hash","split","pop","getChampionData","champDataResponse","champDataResponseJson","champKey","champData","keys","container","padding","_Fragment","spacing","spells","spell","_spell$image","enterTouchDelay","leaveTouchDelay","title","description","ChatGpt","Array","fill","board","setBoard","_useState3","_useState4","player","setPlayer","handleClick","index","calculateWinner","newBoard","winner","alert","square","Square","lines","_lines$i","a","b","c","App","Router","Routes","Route","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f15668f2.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, Dropdown, DropdownHeader, DropdownDivider, DropdownItem } from \"semantic-ui-react\"\n\nexport default function Navbar () {\n  const navigate = useNavigate();\n\n  return (\n    <Menu>\n      <Menu.Item onClick={ () =>\n        navigate('/')\n      }>\n        Home\n      </Menu.Item>\n      <Dropdown text='Projects' pointing className='link item'>\n        <Dropdown.Menu>\n          <DropdownHeader>Scrimba</DropdownHeader>\n          <Dropdown.Item onClick={ () =>\n            navigate(`/projects/meme-generator`)\n          }>\n            Meme Generator\n          </Dropdown.Item>\n          <DropdownDivider />\n          <DropdownHeader>Crypto</DropdownHeader>\n          <Dropdown.Item onClick={ () =>\n            navigate('/projects/bitcoin-tester')\n          }>\n            Bitcoin Tester\n          </Dropdown.Item>\n          <Dropdown.Item onClick={ () =>\n            navigate('/projects/crypto-charts')\n          }>\n            Charts\n          </Dropdown.Item>\n          <DropdownDivider />\n          <DropdownHeader>MTG</DropdownHeader>\n          <DropdownItem onClick={ () =>\n            navigate('/projects/mtg')\n          }>\n            MTG Card Lookup\n          </DropdownItem>\n          <DropdownDivider />\n          <DropdownHeader>League of Legends</DropdownHeader>\n          <DropdownItem onClick={ () =>\n            navigate('/projects/lol')\n          }>\n            League of Legends Champion Scraper\n          </DropdownItem>\n          <DropdownDivider />\n          <DropdownHeader>ChatGPT</DropdownHeader>\n          <DropdownItem onClick={ () =>\n            navigate('/projects/chatgpt')\n          }>\n            ChatGPT Example\n          </DropdownItem>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu>\n  )\n}","import React from \"react\"\nimport Navbar from \"../../components/Navbar/Navbar\"\n\nexport default function Home() {\n  return(\n    <div>\n      <h1>Welcome to blakeacarlson.com!</h1>\n      <h3>This website is under development</h3>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/troll-face.ef4deb6e.png\";","import React from \"react\"\nimport trollFace from \"../images/troll-face.png\"\n\nexport default function Header() {\n    return (\n        <header className=\"meme--header\">\n            <img \n                src={trollFace} \n                className=\"meme--header--image\"\n            />\n            <h2 className=\"meme--header--title\">Meme Generator</h2>\n            <h4 className=\"meme--header--project\">React Course - Project 3</h4>\n        </header>\n    )\n}","import React from \"react\"\nimport { Image } from \"semantic-ui-react\"\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        async function getMemes() {\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\n            const data = await res.json()\n            setAllMemes(data.data.memes)\n        }\n        getMemes()\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image 🖼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <Image src={meme.randomImage} className=\"meme--image\"/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}","import React from 'react'\nimport Header from './components/Header'\nimport Meme from './components/Meme'\nimport './style.css'\n\nexport default function MemeGenerator() {\n  return(\n    <div>\n      <Header />\n      <Meme />\n    </div>\n  )\n}","import React, { useState } from 'react'\nimport { DropdownMenu, Dropdown, Form } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { LineChart, ResponsiveContainer, XAxis, Label, Line, Tooltip, YAxis } from 'recharts';\nimport moment from 'moment';\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\n\nexport default function BitcoinTester() {\n  const [topCoins, setTopCoins] = React.useState([])\n  const [coinPrices, setCoinPrices] = React.useState([])\n  const [coin, setCoin] = React.useState([])\n  const [inputs, setInputs] = useState([])\n\n  React.useEffect(() => {\n    async function getTopCoins () {\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\n      const data = await res.json()\n\n      setTopCoins(data)\n    }\n\n    getTopCoins()\n  }, [])\n\n  React.useEffect(() => {\n    async function getPrices () {\n      const time = Math.floor(Date.now() / 1000)\n\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\n      const data = await res.json()\n\n      setCoinPrices(data.prices)\n    }\n\n    getPrices()\n  }, [coin])\n\n  function handleSubmit(inputs) {\n    inputs.preventDefault();\n    console.log(inputs.coin)\n  }\n\n  let dropdownOptions = []\n    \n    topCoins.map(entry => {\n      let obj = {text: entry.symbol.toUpperCase(), value: entry.symbol}\n      dropdownOptions.push(obj)\n    })\n\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\n    let result = [];\n    let NUM_YEARS = 1;\n    for(let i = 0; i < coinPrices.length; i++) {\n      let day = new Date(coinPrices[i][0])\n      let futureDate = new Date(day.getFullYear() + NUM_YEARS, day.getMonth(), day.getDate())\n      let diffDays = moment(futureDate).diff(day, \"days\")\n      let futureDays = i + diffDays\n      let currentPrice = coinPrices[i][1]\n\n      if( futureDays < coinPrices.length) {\n        let futurePrice = coinPrices[futureDays][1]\n        let change = ((futurePrice / currentPrice) - 1) * 100\n\n\n        let obj = { date: coinPrices[i][0], change: change}\n        result.push(obj)\n      }\n      // if (futureDate.getMonth() === 1 && futureDate.getDate() === 29) {\n      //   console.log(`day = ${day}, futureDate=${futureDate}`)\n      // }\n    }\n\n    let yScale = 'linear'\n\n    return (\n      <div>\n        <Form widths='equal' size='small' onSubmit={handleSubmit}>\n            <Form.Select\n              label='Coin to HODL?'\n              id='coin'\n              options={dropdownOptions}\n              placeholder=''\n            />\n            <Form.Input fluid label='How many years to HODL?' placeholder='1' id='time'/>\n          <Form.Button>Submit</Form.Button>\n        </Form>\n        <ResponsiveContainer height={ 600 }>\n            <LineChart\n              data={ result }\n              margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\n            >\n            <XAxis\n                dataKey=\"date\"\n                type=\"number\"\n                tickFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\n                domain={ ['auto', 'auto'] }\n                scale={ 'time' }\n              ></XAxis>\n            <YAxis\n                scale={ yScale === 'linear' ? 'linear' : 'log' }\n                domain={ ['auto', 'auto'] }\n              >\n                <Label value=\"Percentage Change\" position=\"left\" angle={ -90 } />\n              </YAxis>\n            <Line dataKey=\"change\" dot={false}/>\n            <Tooltip\n                formatter={ (value) => `${value.toFixed(2)}%` }\n                labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\n                cursor={ true }\n              />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div>\n        <Form widths='equal' size='small' onSubmit={handleSubmit}>\n            <Form.Select\n              label='Coin to HODL?'\n              options={dropdownOptions}\n              placeholder=''\n            />\n            <Form.Input fluid label='How many years to HODL?' placeholder='1' />\n          <Form.Button>Submit</Form.Button>\n        </Form>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Label } from 'recharts';\nimport moment from 'moment'\nimport { Dropdown, Loader, Segment, Dimmer } from 'semantic-ui-react'\n\nexport default function CryptoCharts () {\n\n  const [coinPrices, setCoinPrices] = React.useState([])\n  const [yScale, setYScale] = React.useState('linear')\n  const [coin, setCoin] = React.useState([])\n  const [topCoins, setTopCoins] = React.useState([])\n\n  React.useEffect(() => {\n    async function getTopCoins () {\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\n      const data = await res.json()\n\n      setTopCoins(data)\n      setCoin(data[0])\n    }\n\n    getTopCoins()\n  }, [])\n\n  React.useEffect(() => {\n    async function getPrices () {\n      const time = Math.floor(Date.now() / 1000)\n\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\n      const data = await res.json()\n\n      setCoinPrices(data.prices)\n    }\n\n    if (coin.symbol !== undefined) {\n      getPrices()\n    }\n  }, [coin])\n\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\n    let result = [];\n    let yearTicks = []\n    coinPrices.map(entry => {\n      let day = new Date(entry[0])\n\n      if (day.getDate() === 1 && day.getMonth() === 0) {\n        yearTicks.push(day)\n      }\n      let obj = { date: entry[0], price: entry[1] }\n      result.push(obj)\n    })\n\n    return (\n      <div>\n        <Dropdown text={ coin.symbol.toUpperCase() } pointing className='link item'>\n          <Dropdown.Menu>\n            { topCoins.slice(0, 20).map(topCoin => (\n              <Dropdown.Item onClick={ () => setCoin(topCoin) }>{ topCoin.symbol.toUpperCase() }</Dropdown.Item>\n            )) }\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown text={ yScale === 'linear' ? 'Linear' : 'Log' } pointing className='link item'>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={ () => setYScale('linear') }>Linear</Dropdown.Item>\n            <Dropdown.Item onClick={ () => setYScale('log') }>Log</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <ResponsiveContainer height={ 600 }>\n          <LineChart\n            data={ result }\n            margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\n          >\n            <XAxis\n              dataKey=\"date\"\n              type=\"number\"\n              ticks={ yearTicks }\n              tickFormatter={ timeStr => moment(timeStr).format('YYYY') }\n              domain={ ['auto', 'auto'] }\n              scale={ 'time' }\n            >\n              <Label value=\"Date\" offset={ 0 } position=\"bottom\" />\n            </XAxis>\n            <YAxis\n              scale={ yScale === 'linear' ? 'linear' : 'log' }\n              domain={ ['auto', 'auto'] }\n            >\n              <Label value=\"Price (USD)\" position=\"left\" angle={ -90 } />\n            </YAxis>\n            <Line\n              dataKey=\"price\"\n              stroke=\"#8884d8\"\n              dot={ false }\n            />\n            <Tooltip\n              formatter={ (value) => `$${value.toFixed(2)}` }\n              labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\n              cursor={ true }\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  } else {\n    return (\n      <Segment>\n        <Dimmer active>\n          <Loader />\n        </Dimmer>\n      </Segment>\n    )\n  }\n}","import { Button, Checkbox, FormControl, FormControlLabel, FormHelperText, FormLabel, Grid, InputAdornment, InputLabel, MenuItem, Select, TextField } from '@mui/material'\nimport { Box } from '@mui/system'\nimport { LoadingButton } from '@mui/lab'\nimport React from 'react'\n\nconst initialState = {\n  name: '',\n  text: '',\n  type: '',\n  whiteCheck: false,\n  blackCheck: false,\n  blueCheck: false,\n  greenCheck: false,\n  redCheck: false,\n  andor: 'and',\n  cmc: '',\n  power: '',\n  toughness: '',\n  format: '',\n  legal: 'legal',\n  set: '',\n  commonCheck: false,\n  uncommonCheck: false,\n  rareCheck: false,\n  mythicRareCheck: false,\n  currency: 'usd',\n  currencyCompare: 'lessThan',\n  price: '',\n}\n\nconst MtgForm = ({ handleSubmit, isFetching }) => {\n  const [inputs, setInputs] = React.useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n\n    console.log(`name: ${name} value: ${value}`)\n  }\n\n  const handleCheck = (e) => {\n    const { name, checked } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: checked,\n    });\n\n    console.log(`name: ${name} value: ${checked}`)\n  }\n\n  const resetForm = () => {\n    setInputs(initialState)\n  }\n\n  return (\n    <form onSubmit={ (e) => {\n      handleSubmit(e, inputs) \n    }}>\n      <Grid>\n        <Grid item>\n          <FormControl>\n            <TextField\n              name=\"name\"\n              value={inputs.name}\n              onChange={handleChange}\n              label=\"Name\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <TextField\n              name=\"text\"\n              value={inputs.text}\n              onChange={handleChange}\n              label=\"Text\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <TextField\n              name=\"type\"\n              value={inputs.type}\n              onChange={handleChange}\n              label=\"Type\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl sx={ { flexDirection: \"row\" } }>\n            <FormControlLabel control={ <Checkbox name='whiteCheck' checked={inputs.whiteCheck} onChange={handleCheck}/> } label=\"White\" style = {{ marginLeft: 10 }}/>\n            <FormControlLabel control={ <Checkbox name='blueCheck' checked={inputs.blueCheck} onChange={handleCheck}/> } label=\"Blue\" />\n            <FormControlLabel control={ <Checkbox name='blackCheck' checked={inputs.blackCheck} onChange={handleCheck}/> } label=\"Black\" />\n            <FormControlLabel control={ <Checkbox name='redCheck' checked={inputs.redCheck} onChange={handleCheck}/> } label=\"Red\" />\n            <FormControlLabel control={ <Checkbox name='greenCheck' checked={inputs.greenCheck} onChange={handleCheck}/> } label=\"Green\" />\n            <TextField \n              value={inputs.andor}\n              onChange={handleChange}\n              select\n              label=\"AND/OR\"\n              name=\"andor\"\n              style = {{ margin: 10 }}\n            >\n              <MenuItem value={'and'}>AND</MenuItem>\n              <MenuItem value={'or'}>OR</MenuItem>\n            </TextField>\n          </FormControl>\n        </Grid>\n        <Grid>\n          <FormControl>\n            <TextField\n              type=\"number\"\n              name=\"cmc\"\n              value={inputs.cmc}\n              onChange={ handleChange }\n              label=\"CMC\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <TextField\n              type=\"number\"\n              name=\"power\"\n              value={inputs.power}\n              onChange={handleChange}\n              label=\"Power\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <TextField\n              type=\"number\"\n              name=\"toughness\"\n              value={inputs.toughness}\n              onChange={handleChange}\n              label=\"Toughness\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl sx={ { flexDirection: \"row\" } } >\n            <TextField\n              select\n              name=\"format\"\n              value={inputs.format}\n              onChange={handleChange}\n              label=\"Format\"\n              style = {{ width: 150, marginLeft: 10, marginTop: 10, marginBottom: 10 }}\n            >\n              <MenuItem value={''}>&nbsp;</MenuItem>\n              <MenuItem value={'standard'}>Standard</MenuItem>\n              <MenuItem value={'historic'}>Historic</MenuItem>\n              <MenuItem value={'pioneer'}>Pioneer</MenuItem>\n              <MenuItem value={'modern'}>Modern</MenuItem>\n              <MenuItem value={'legacy'}>Legacy</MenuItem>\n              <MenuItem value={'pauper'}>Pauper</MenuItem>\n              <MenuItem value={'vintage'}>Vintage</MenuItem>\n            </TextField>\n            <TextField \n              select\n              fullWidth\n              name=\"legal\"\n              value={inputs.legal}\n              onChange={handleChange}\n              style = {{ width: 150, marginTop: 10, marginBottom: 10 }}\n            >\n              <MenuItem value={'legal'}>Legal</MenuItem>\n              <MenuItem value={'restricted'}>Restricted</MenuItem>\n              <MenuItem value={'banned'}>Banned</MenuItem>\n            </TextField>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl>\n            <TextField\n              name=\"set\"\n              value={inputs.set}\n              onChange={handleChange}\n              label=\"Set\"\n              style = {{ margin: 10 }}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl sx={ { flexDirection: \"row\" } }>\n            <FormControlLabel control={ <Checkbox name='commonCheck' checked={inputs.commonCheck} onChange={handleCheck}/> } label=\"Common\" style = {{ marginLeft: 10 }} />\n            <FormControlLabel control={ <Checkbox name='uncommonCheck' checked={inputs.uncommonCheck} onChange={handleCheck}/> } label=\"Uncommon\" />\n            <FormControlLabel control={ <Checkbox name='rareCheck' checked={inputs.rareCheck} onChange={handleCheck}/> } label=\"Rare\" />\n            <FormControlLabel control={ <Checkbox name='mythicRareCheck' checked={inputs.mythicRareCheck} onChange={handleCheck}/> } label=\"Mythic Rare\" />\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <FormControl sx={ { flexDirection: \"row\" } } >\n            <TextField\n              select\n              name=\"currency\"\n              value={inputs.currency}\n              onChange={handleChange}\n              style = {{ marginLeft: 10, marginTop: 10, marginBottom: 10 }}\n            >\n              <MenuItem value={'usd'}>USD</MenuItem>\n              <MenuItem value={'euro'}>Euros</MenuItem>\n              <MenuItem value={'tickets'}>MTGO Tickets</MenuItem>\n            </TextField>\n            <TextField \n              select\n              name=\"currencyCompare\"\n              value={inputs.currencyCompare}\n              onChange={handleChange}\n              style = {{ marginTop: 10, marginBottom: 10 }}\n            >\n              <MenuItem value={'lessThan'}>less than</MenuItem>\n              <MenuItem value={'greaterThan'}>greater than</MenuItem>\n              <MenuItem value={'lessThanOrEqual'}>less than or eqal</MenuItem>\n              <MenuItem value={'greaterThanOrEqual'}>greater than or eqal</MenuItem>\n            </TextField>\n            {inputs.currency === 'usd' ? \n              <TextField\n              type=\"number\"\n              name=\"price\"\n              value={inputs.price}\n              onChange={handleChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">$</InputAdornment>\n                ),\n              }}\n              style = {{ marginTop: 10, marginBottom: 10 }}\n            /> : inputs.currency === 'euro' ? \n            <TextField\n              type=\"number\"\n              name=\"price\"\n              value={inputs.price}\n              onChange={handleChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">€</InputAdornment>\n                ),\n              }}\n              style = {{ marginTop: 10, marginBottom: 10 }}\n            /> :\n            <TextField\n              type=\"number\"\n              name=\"price\"\n              value={inputs.price}\n              onChange={handleChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">TIX</InputAdornment>\n                ),\n              }}\n              style = {{ marginTop: 10, marginBottom: 10 }}\n            />\n            }\n          </FormControl>\n        </Grid>\n      </Grid>\n      {isFetching ? <LoadingButton loading variant=\"contained\" style = {{ margin: 10 }}>Submit</LoadingButton> : <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{ margin: 10 }}>Submit</Button>}\n      <Button variant=\"contained\" color=\"secondary\" name=\"reset\" style = {{ margin: 10 }} onClick={resetForm}>Reset</Button>\n    </form>\n  )\n}\n\nexport default MtgForm\n\n{/* <Form onSubmit={handleSubmit}>\n          <Form.Input label='Color' placeholder='Red' name='color' onChange={handleChange}/>\n          <Form.Input label='CMC' placeholder='1' name='cmc' onChange={handleChange}/>\n        <Form.Button>SUBMIT</Form.Button>\n      </Form> */}","import React from 'react'\nimport MtgForm from './components/MtgForm'\nimport { ImageList, ImageListItem, inputUnstyledClasses } from '@mui/material'\n\n\nconst Mtg = () => {\n  const [inputs, setInputs] = React.useState([])\n  const [cards, setCards] = React.useState([])\n  const [isFetching, setIsFetching] = React.useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (input) => {\n    function getScryfallCards (nextPage) {\n      let colors = []\n      if (input.whiteCheck) {\n        colors.push('w')\n      }\n      if (input.blackCheck) {\n        colors.push('b')\n      }\n      if (input.greenCheck) {\n        colors.push('g')\n      }\n      if (input.redCheck) {\n        colors.push('r')\n      }\n      if (input.blueCheck) {\n        colors.push('u')\n      }\n\n      let colorString = ''\n\n      colorString = colors.join('')\n\n      let lookup = []\n\n      if (input.name !== '') {\n        lookup.push(`${input.name}`)\n      }\n\n      if (input.text !== '') {\n        lookup.push(encodeURIComponent(`oracle=${input.text}`))\n      }\n\n      if (input.type !== '') {\n        lookup.push(encodeURIComponent(`t=${input.type}`))\n      }\n\n      if (colorString !== '') {\n        if (input.andor === 'and') {\n          lookup.push(encodeURIComponent(`c=${colorString}`))\n        } else {\n          lookup.push(encodeURIComponent(`c<=${colorString}`))\n        }\n      }\n\n      if (input.cmc !== '') {\n        lookup.push(encodeURIComponent(`cmc=${input.cmc}`))\n      }\n\n      if (input.power !== '') {\n        lookup.push(encodeURIComponent(`pow=${input.power}`))\n      }\n\n      if (input.toughness !== '') {\n        lookup.push(encodeURIComponent(`tou=${input.toughness}`))\n      }\n\n      if (input.format !== '') {\n        if (input.legal === 'legal') {\n          lookup.push(encodeURIComponent(`f=${input.format}`))\n        } else if (input.legal === 'restricted') {\n          lookup.push(encodeURIComponent(`restricted=${input.format}`))\n        } else {\n          lookup.push(encodeURIComponent(`banned=${input.format}`))\n        }\n      }\n\n      if (input.set !== '') {\n        lookup.push(encodeURIComponent(`e=${input.set}`))\n      }\n\n      let rarities = []\n\n      if (input.commonCheck) {\n        rarities.push('rarity%3Dc')\n      }\n      if (input.uncommonCheck) {\n        rarities.push('rarity%3Du')\n      }\n      if (input.rareCheck) {\n        rarities.push('rarity%3Dr')\n      }\n      if (input.mythicRareCheck) {\n        rarities.push('rarity%3Dm')\n      }\n\n      let rarityString = ''\n\n      rarityString = rarities.join('+OR+')\n\n      if (rarityString !== '') {\n        lookup.push(`%28${rarityString}%29`)\n      }\n\n      if (input.price !== '') {\n        let priceString = ''\n\n        console.log(`input.price: ${input.price}`)\n\n        console.log(`priceString1: ${priceString}`)\n\n        if (input.currency === 'usd') {\n          priceString = priceString.concat('usd')\n        } else if (input.currency === 'euro') {\n          priceString = priceString.concat('euro')\n        } else {\n          priceString = priceString.concat('tix')\n        }\n\n        console.log(`priceString2: ${priceString}`)\n\n        if (input.currencyCompare === 'lessThan') {\n          priceString = priceString.concat(`<${input.price}`)\n        } else if (input.currencyCompare === 'greaterThan') {\n          priceString = priceString.concat(`>${input.price}`)\n        } else if (input.currencyCompare === 'lessThanOrEqual') {\n          priceString = priceString.concat(`<=${input.price}`)\n        } else {\n          priceString = priceString.concat(`>=${input.price}`)\n        }\n\n        console.log(`priceString3: ${priceString}`)\n\n        lookup.push(encodeURIComponent(`${priceString}`))\n      }\n\n      let lookupString = lookup.join('+')\n\n      if (lookupString !== '') {\n        try {\n          if (nextPage) {\n            fetch(nextPage)\n              .then(response => response.json())\n              .then(data => {\n                setCards(cards => {\n                  return [...cards, ...data.data]\n                })\n                if (data.has_more) {\n                  setTimeout(function () { getScryfallCards(data.next_page) }, 100)\n                } else {\n                  setIsFetching(false)\n                }\n              })\n          } else {\n            setIsFetching(true)\n            fetch(`https://api.scryfall.com/cards/search?q=${lookupString}`)\n              .then(response => response.json())\n              .then(data => {\n                setCards(data.data)\n                if (data.has_more) {\n                  setTimeout(function () { getScryfallCards(data.next_page) }, 100)\n                } else {\n                  setIsFetching(false)\n                }\n              })\n          }\n        }\n        catch (error) {\n          console.log(`error: ${error}`)\n        }\n      }\n      else {\n        console.log('error')\n      }\n    }\n\n    async function getCards () {\n      let colors = []\n      if (input.whiteCheck) {\n        colors.push('white')\n      }\n      if (input.blackCheck) {\n        colors.push('black')\n      }\n      if (input.greenCheck) {\n        colors.push('green')\n      }\n      if (input.redCheck) {\n        colors.push('red')\n      }\n      if (input.blueCheck) {\n        colors.push('blue')\n      }\n\n      let colorString = ''\n\n      if (input.andor === 'and') {\n        colorString = colors.join(',')\n      } else {\n        colorString = colors.join('|')\n      }\n\n      let lookup = []\n\n      if (colorString !== '') {\n        lookup.push(`colors=${colorString}`)\n      }\n\n      if (input.cmc) {\n        lookup.push(`cmc=${input.cmc}`)\n      }\n\n      let lookupString = lookup.join('+')\n\n      console.log(`lookupString: ${lookupString}`)\n\n      if (lookupString !== '') {\n        try {\n          const res = await fetch(`https://api.magicthegathering.io/v1/cards?${lookupString}`)\n          // const res = await fetch(`https://api.scryfall.com/cards/search?${lookupString}`)\n          const data = await res.json()\n\n          setCards(data.cards)\n        }\n        catch (error) {\n          console.log(`error: ${error}`)\n        }\n      }\n      else {\n        console.log('error')\n      }\n    }\n    getScryfallCards()\n  }\n\n  if (cards && cards.length > 0) {\n    return (\n      <div>\n        <MtgForm\n          handleSubmit={ (e, input) => {\n            e.preventDefault()\n            handleSubmit(input)\n          } }\n          isFetching={ isFetching }\n        />\n        <div>\n          <ImageList cols={ 8 }>\n            {\n              cards.map(card => (\n                card?.image_uris?.normal ?\n                  <ImageListItem>\n                    <img\n                      src={ card?.image_uris?.normal }\n                      loading=\"lazy\"\n                    />\n                  </ImageListItem> :\n\n                  card?.card_faces[0]?.image_uris.normal ?\n                    <ImageListItem>\n                      <img\n                        src={ card?.card_faces[0]?.image_uris.normal }\n                        loading=\"lazy\"\n                      />\n                    </ImageListItem> :\n\n                    null\n              ))\n            }\n          </ImageList>\n        </div>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div>\n        <MtgForm\n          handleSubmit={ (e, input) => {\n            e.preventDefault()\n            handleSubmit(input)\n          } }\n          isFetching={ isFetching }\n        />\n      </div>)\n  }\n}\nexport default Mtg\n\n{/* <ImageList cols={8}>\n            {cards.map(card => (\n              card['image_uris']['normal'] ?\n                <ImageListItem>\n                  <img\n                    src={card['image_uris']['normal']}\n                  />\n                </ImageListItem> :\n                null\n            ))}\n            </ImageList> */}\n","import React from 'react'\nimport { ImageListItem, ImageList } from '@mui/material';\n\nexport const LolChampGrid = (props) => {\n  const championData = props?.championData\n  const version = props?.version\n  const champClickHandler = props?.champClickHandler\n  \n\n  return (\n    <div>\n      <ImageList cols={ 10 }>\n          {\n            Object.entries(championData).map((obj) => {\n              const data = obj[1]\n              if (data?.image?.full) {\n                return (\n                  <ImageListItem onClick={ () => champClickHandler(data?.id) }>\n                    <img\n                      src={ `https://ddragon.leagueoflegends.com/cdn/${version}/img/champion/${data?.image?.full}` }\n                      loading='lazy'\n                    />\n                  </ImageListItem>\n                )\n              }\n            })\n          }\n      </ImageList>\n    </div>\n  )\n\n}","import React, { useEffect, useState } from 'react'\nimport { LolChampGrid } from './components/LolChampGrid';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Lol = () => {\n\n  const navigate = useNavigate();\n\n  const [state, setState] = useState({\n    version: '',\n    championData: {}\n  })\n\n  useEffect(() => {\n    const fetchChampData = async () => {\n      try {\n        const versionResponse = await fetch('https://ddragon.leagueoflegends.com/api/versions.json', {\n          cache:\"no-store\"\n        })\n        if (versionResponse.ok) {\n          const versionResponseJson = await versionResponse.json()\n          const curVersion = versionResponseJson[0]\n          const champResponse = await fetch(`https://ddragon.leagueoflegends.com/cdn/${curVersion}/data/en_US/champion.json`)\n          if(champResponse.ok) {\n            const champResponseJson = await champResponse.json()\n            setState(state => ({ ...state, version: curVersion, championData: champResponseJson?.data }))\n          }\n        }\n      } catch (error) {\n\n      }\n    }\n\n    const champData = fetchChampData()\n  }, [])\n\n  const champClickHandler = (champId) => {\n    console.log(`champion: ${champId}`)\n    navigate(`/projects/lol/champions/${champId}`)\n  }\n\n  return (\n    <LolChampGrid\n      championData={ state?.championData }\n      version={ state?.version }\n      champClickHandler={champClickHandler}\n    />\n  )\n}","import { Divider, Grid, Tooltip } from '@mui/material';\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\n\nexport const LolChampions = () => {\n\n  const navigate = useNavigate();\n  const champId = window.location.hash.split('/').pop()\n\n  const [state, setState] = useState({\n    championData: {},\n    version: ''\n  })\n\n  useEffect(() => {\n    const getChampionData = async () => {\n      try {\n        const versionResponse = await fetch('https://ddragon.leagueoflegends.com/api/versions.json', {\n          cache: \"no-store\"\n        })\n        if (versionResponse.ok) {\n          const versionResponseJson = await versionResponse.json()\n          const curVersion = versionResponseJson[0]\n          const champDataResponse = await fetch(`https://ddragon.leagueoflegends.com/cdn/${curVersion}/data/en_US/champion/${champId}.json`)\n          if (champDataResponse.ok) {\n            const champDataResponseJson = await champDataResponse.json()\n            const champKey = Object.keys(champDataResponseJson?.data)[0]\n            const champData = champDataResponseJson?.data[champKey]\n            setState(state => ({ ...state, version: curVersion, championData: champData }))\n          }\n        }\n      } catch (error) {\n\n      }\n    }\n\n    getChampionData()\n  }, [])\n\n  return (\n    <div>\n      <Grid container style={ { padding: \"0 0 0 0.5em\" } }>\n        {\n          state?.championData?.name ?\n            <h1>\n              {\n                state?.championData?.name\n              }\n            </h1>\n            :\n            <>\n            </>\n        }\n      </Grid>\n      <Grid container style={ { padding: \"0 0 0 0.5em\" } }>\n        {\n          state?.championData?.image?.full ?\n\n            <img\n              src={ `https://ddragon.leagueoflegends.com/cdn/${state?.version}/img/champion/${state?.championData?.image?.full}` }\n            />\n            :\n            <>\n            </>\n        }\n      </Grid>\n      <Grid container spacing={ 1 } style={ { padding: \"0 0 0 0.5em\" } }>\n        {\n          state?.championData?.spells ?\n            state?.championData?.spells.map((spell) => {\n              return (\n                <Grid item>\n                  <Tooltip enterTouchDelay={ 0 } leaveTouchDelay={ 0 } title={ spell?.description }>\n                    <img\n                      src={ `https://ddragon.leagueoflegends.com/cdn/${state?.version}/img/spell/${spell?.image?.full}` }\n                    />\n                  </Tooltip>\n                </Grid>\n              )\n            })\n            :\n            <>\n            </>\n        }\n      </Grid>\n    </div>\n  )\n}","import React, { useState } from \"react\";\n\nexport const ChatGpt = () => {\n  const [board, setBoard] = useState(Array(9).fill(null)); // The game board\n  const [player, setPlayer] = useState(\"X\"); // The current player\n\n  // Function to handle a player clicking on a square\n  function handleClick(index) {\n    // If the square is already filled or the game is over, return\n    if (board[index] || calculateWinner(board)) {\n      return;\n    }\n\n    // Update the board with the current player's symbol\n    const newBoard = [...board];\n    newBoard[index] = player;\n    setBoard(newBoard);\n\n    // Check if there is a winner\n    const winner = calculateWinner(newBoard);\n    if (winner) {\n      alert(`Player ${winner} wins!`);\n      setBoard(Array(9).fill(null));\n      return;\n    }\n\n    // Switch to the other player\n    setPlayer(player === \"X\" ? \"O\" : \"X\");\n  }\n\n  return(\n    <div className=\"tic-tac-toe\">\n      <h1>Tic Tac Toe</h1>\n      <div className=\"board\">\n        {/* Map over the board array and create a Square component for each square on the board */}\n        <div className=\"row\">\n          {board.slice(0, 3).map((square, index) => (\n            <Square\n              key={index}\n              value={square}\n              onClick={() => handleClick(index)}\n            />\n          ))}\n        </div>\n        <div className=\"row\">\n          {board.slice(3, 6).map((square, index) => (\n            <Square\n              key={index + 3}\n              value={square}\n              onClick={() => handleClick(index + 3)}\n            />\n          ))}\n        </div>\n        <div className=\"row\">\n          {board.slice(6, 9).map((square, index) => (\n            <Square\n              key={index + 6}\n              value={square}\n              onClick={() => handleClick(index + 6)}\n            />\n          ))}\n        </div>\n      </div>\n      <p>Current player: {player}</p>\n    </div>\n  )\n}\n\n// A component to represent a square on the game board\nfunction Square({ value, onClick }) {\n  return (\n    <div className=\"square\" onClick={onClick}>\n      {value}\n    </div>\n  );\n}\n\n// Function to check if a player has won the game\nfunction calculateWinner(board) {\n  // Array of all possible winning combinations\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  // Loop over each possible winning combination\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    // If all three squares in this combination are filled with the same symbol, we have a winner!\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n\n  // If no winner was found, return null\n  return null;\n}\n","import React from \"react\"\nimport Home from \"./pages/home/Home.js\"\nimport MemeGenerator from \"./pages/projects/meme-generator/MemeGenerator\"\nimport BitcoinTester from \"./pages/projects/bitcoin-tester/BitcoinTester\";\nimport CryptoCharts from \"./pages/projects/crypto-charts/CryptoCharts\"\nimport Mtg from \"./pages/projects/mtg/Mtg\"\nimport { Lol } from \"./pages/projects/lol/Lol\"\nimport { LolChampions } from \"./pages/projects/lol/LolChampions.js\";\nimport Navbar from \"./components/Navbar/Navbar\"\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { ChatGpt } from \"./pages/projects/chatgpt/ChatGpt.jsx\";\nimport \"./styles.css\"\n\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />}/>\n          <Route exact path=\"/projects/meme-generator\" element={<MemeGenerator />}/>\n          <Route exact path=\"/projects/bitcoin-tester\" element={<BitcoinTester />}/>\n          <Route exact path=\"/projects/crypto-charts\" element={<CryptoCharts />}/>\n          <Route exact path=\"/projects/mtg\" element={<Mtg />}/>\n          <Route exact path=\"/projects/lol\" element={<Lol />}/>\n          <Route exact path=\"/projects/lol/champions/*\" element={<LolChampions />}/>\n          <Route exact path=\"/projects/chatgpt\" element={<ChatGpt />}/>\n        </Routes>\n      </Router>\n    </div>\n  )\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}