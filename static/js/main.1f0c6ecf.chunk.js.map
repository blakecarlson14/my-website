{"version":3,"sources":["components/Navbar/Navbar.js","pages/home/Home.js","pages/projects/meme-generator/images/troll-face.png","pages/projects/meme-generator/components/Header.js","pages/projects/meme-generator/components/Meme.js","pages/projects/meme-generator/MemeGenerator.js","pages/projects/bitcoin-tester/BitcoinTester.js","pages/projects/crypto-charts/CryptoCharts.js","App.js","index.js"],"names":["Navbar","navigate","useNavigate","Menu","Item","onClick","Dropdown","text","pointing","className","DropdownHeader","DropdownDivider","Home","Header","src","trollFace","Meme","React","useState","topText","bottomText","randomImage","meme","setMeme","allMemes","setAllMemes","handleChange","event","target","name","value","prevMeme","useEffect","a","fetch","res","json","data","memes","getMemes","type","placeholder","onChange","randomNumber","Math","floor","random","length","url","Image","MemeGenerator","BitcoinTester","CryptoCharts","coinPrices","setCoinPrices","yScale","setYScale","coin","setCoin","topCoins","setTopCoins","getTopCoins","time","Date","now","id","prices","undefined","symbol","getPrices","result","yearTicks","map","entry","day","getDate","getMonth","push","obj","date","price","toUpperCase","slice","topCoin","ResponsiveContainer","height","LineChart","margin","top","right","left","bottom","XAxis","dataKey","ticks","tickFormatter","timeStr","moment","format","domain","scale","Label","offset","position","YAxis","angle","Line","stroke","dot","Tooltip","formatter","toFixed","labelFormatter","cursor","Segment","Dimmer","active","Loader","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f0c6ecf.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, Dropdown, DropdownHeader, DropdownDivider } from \"semantic-ui-react\"\n\nexport default function Navbar() {\n  const navigate = useNavigate();\n\n  return (\n    <Menu>\n      <Menu.Item onClick={() =>\n        navigate('/')\n      }>\n        Home\n      </Menu.Item>\n      <Dropdown text='Projects' pointing className='link item'>\n        <Dropdown.Menu>\n          <DropdownHeader>Scrimba</DropdownHeader>\n          <Dropdown.Item onClick={() =>\n            navigate(`/projects/meme-generator`)\n          }>\n            Meme Generator\n          </Dropdown.Item>\n          <DropdownDivider/>\n          <DropdownHeader>Crypto</DropdownHeader>\n            <Dropdown.Item onClick={() =>\n              navigate('/projects/bitcoin-tester')\n            }>\n              Bitcoin Tester\n            </Dropdown.Item>\n            <Dropdown.Item onClick={() =>\n              navigate('/projects/crypto-charts')\n            }>\n              Charts\n            </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu>\n  )\n}","import React from \"react\"\nimport Navbar from \"../../components/Navbar/Navbar\"\n\nexport default function Home() {\n  return(\n    <div>\n      <h1>Welcome to blakeacarlson.com!</h1>\n      <h3>This website is under development</h3>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/troll-face.ef4deb6e.png\";","import React from \"react\"\nimport trollFace from \"../images/troll-face.png\"\n\nexport default function Header() {\n    return (\n        <header className=\"meme--header\">\n            <img \n                src={trollFace} \n                className=\"meme--header--image\"\n            />\n            <h2 className=\"meme--header--title\">Meme Generator</h2>\n            <h4 className=\"meme--header--project\">React Course - Project 3</h4>\n        </header>\n    )\n}","import React from \"react\"\nimport { Image } from \"semantic-ui-react\"\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        async function getMemes() {\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\n            const data = await res.json()\n            setAllMemes(data.data.memes)\n        }\n        getMemes()\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <Image src={meme.randomImage} className=\"meme--image\"/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}","import React from 'react'\nimport Header from './components/Header'\nimport Meme from './components/Meme'\nimport './style.css'\n\nexport default function MemeGenerator() {\n  return(\n    <div>\n      <Header />\n      <Meme />\n    </div>\n  )\n}","import React from 'react'\n\nexport default function BitcoinTester() {\n  return null\n}","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Label } from 'recharts';\nimport moment from 'moment'\nimport { Dropdown, Loader, Segment, Dimmer } from 'semantic-ui-react'\n\nexport default function CryptoCharts () {\n\n  const [coinPrices, setCoinPrices] = React.useState([])\n  const [yScale, setYScale] = React.useState('linear')\n  const [coin, setCoin] = React.useState([])\n  const [topCoins, setTopCoins] = React.useState([])\n\n  React.useEffect(() => {\n    async function getTopCoins () {\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\n      const data = await res.json()\n\n      setTopCoins(data)\n      setCoin(data[0])\n    }\n\n    getTopCoins()\n  }, [])\n\n  React.useEffect(() => {\n    async function getPrices () {\n      const time = Math.floor(Date.now() / 1000)\n\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\n      const data = await res.json()\n\n      setCoinPrices(data.prices)\n    }\n\n    if (coin.symbol !== undefined) {\n      getPrices()\n    }\n  }, [coin])\n\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\n    let result = [];\n    let yearTicks = []\n    coinPrices.map(entry => {\n      let day = new Date(entry[0])\n\n      if (day.getDate() === 1 && day.getMonth() === 0) {\n        yearTicks.push(day)\n      }\n      let obj = { date: entry[0], price: entry[1] }\n      result.push(obj)\n    })\n\n    return (\n      <div>\n        <Dropdown text={ coin.symbol.toUpperCase() } pointing className='link item'>\n          <Dropdown.Menu>\n            { topCoins.slice(0, 20).map(topCoin => (\n              <Dropdown.Item onClick={ () => setCoin(topCoin) }>{ topCoin.symbol.toUpperCase() }</Dropdown.Item>\n            )) }\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown text={ yScale === 'linear' ? 'Linear' : 'Log' } pointing className='link item'>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={ () => setYScale('linear') }>Linear</Dropdown.Item>\n            <Dropdown.Item onClick={ () => setYScale('log') }>Log</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <ResponsiveContainer height={ 600 }>\n          <LineChart\n            data={ result }\n            margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\n          >\n            <XAxis\n              dataKey=\"date\"\n              type=\"number\"\n              ticks={ yearTicks }\n              tickFormatter={ timeStr => moment(timeStr).format('YYYY') }\n              domain={ ['auto', 'auto'] }\n              scale={ 'time' }\n            >\n              <Label value=\"Date\" offset={ 0 } position=\"bottom\" />\n            </XAxis>\n            <YAxis\n              scale={ yScale === 'linear' ? 'linear' : 'log' }\n              domain={ ['auto', 'auto'] }\n            >\n              <Label value=\"Price (USD)\" position=\"left\" angle={ -90 } />\n            </YAxis>\n            <Line\n              dataKey=\"price\"\n              stroke=\"#8884d8\"\n              dot={ false }\n            />\n            <Tooltip\n              formatter={ (value) => `$${value.toFixed(2)}` }\n              labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\n              cursor={ true }\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  } else {\n    return (\n      <Segment>\n        <Dimmer active>\n          <Loader />\n        </Dimmer>\n      </Segment>\n    )\n  }\n}","import React from \"react\"\nimport Home from \"./pages/home/Home.js\"\nimport MemeGenerator from \"./pages/projects/meme-generator/MemeGenerator\"\nimport BitcoinTester from \"./pages/projects/bitcoin-tester/BitcoinTester\";\nimport CryptoCharts from \"./pages/projects/crypto-charts/CryptoCharts\"\nimport Navbar from \"./components/Navbar/Navbar\"\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\n\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />}/>\n          <Route exact path=\"/projects/meme-generator\" element={<MemeGenerator />}/>\n          <Route exact path=\"/projects/bitcoin-tester\" element={<BitcoinTester />}/>\n          <Route exact path=\"/projects/crypto-charts\" element={<CryptoCharts />}/>\n        </Routes>\n      </Router>\n    </div>\n  )\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}