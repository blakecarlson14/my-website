{"version":3,"sources":["components/Navbar/Navbar.js","pages/home/Home.js","pages/projects/meme-generator/images/troll-face.png","pages/projects/meme-generator/components/Header.js","pages/projects/meme-generator/components/Meme.js","pages/projects/meme-generator/MemeGenerator.js","pages/projects/bitcoin-tester/BitcoinTester.js","App.js","index.js"],"names":["Navbar","navigate","useNavigate","Menu","Item","onClick","Dropdown","text","pointing","className","Home","Header","src","trollFace","Meme","React","useState","topText","bottomText","randomImage","meme","setMeme","allMemes","setAllMemes","handleChange","event","target","name","value","prevMeme","useEffect","a","fetch","res","json","data","memes","getMemes","type","placeholder","onChange","randomNumber","Math","floor","random","length","url","Image","MemeGenerator","BitcoinTester","coinPrices","setCoinPrices","yScale","setYScale","coin","setCoin","topCoins","setTopCoins","getTopCoins","time","Date","now","console","log","id","prices","undefined","symbol","getPrices","result","map","entry","obj","date","dayjs","format","price","push","toUpperCase","slice","topCoin","width","height","style","stroke","title","line","ticks","fill","fontWeight","x","y","strokeLinejoin","strokeWidth","curve","strokeDasharray","curveCatmullRom","alpha","Segment","Dimmer","active","Loader","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51c98514.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, Dropdown } from \"semantic-ui-react\"\n\nexport default function Navbar() {\n  const navigate = useNavigate();\n\n  return (\n    <Menu>\n      <Menu.Item onClick={() =>\n        navigate('/')\n      }>\n        Home\n      </Menu.Item>\n      <Dropdown text='Projects' pointing className='link item'>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() =>\n            navigate(`/projects/meme-generator`)\n          }>\n            Meme Generator\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() =>\n            navigate('/projects/bitcoin-tester')\n          }>\n            Bitcoin Tester\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu>\n  )\n}","import React from \"react\"\nimport Navbar from \"../../components/Navbar/Navbar\"\n\nexport default function Home() {\n  return(\n    <div>\n      <h1>Welcome to blakeacarlson.com!</h1>\n      <h3>This website is under development</h3>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/troll-face.ef4deb6e.png\";","import React from \"react\"\nimport trollFace from \"../images/troll-face.png\"\n\nexport default function Header() {\n    return (\n        <header className=\"meme--header\">\n            <img \n                src={trollFace} \n                className=\"meme--header--image\"\n            />\n            <h2 className=\"meme--header--title\">Meme Generator</h2>\n            <h4 className=\"meme--header--project\">React Course - Project 3</h4>\n        </header>\n    )\n}","import React from \"react\"\nimport { Image } from \"semantic-ui-react\"\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        async function getMemes() {\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\n            const data = await res.json()\n            setAllMemes(data.data.memes)\n        }\n        getMemes()\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <Image src={meme.randomImage} className=\"meme--image\"/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}","import React from 'react'\nimport Header from './components/Header'\nimport Meme from './components/Meme'\nimport './style.css'\n\nexport default function MemeGenerator() {\n  return(\n    <div>\n      <Header />\n      <Meme />\n    </div>\n  )\n}","import React from 'react'\n// import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nimport moment from 'moment'\nimport dayjs from 'dayjs'\nimport { Dropdown, Loader, Segment, Dimmer } from 'semantic-ui-react'\nimport TopCoinFetcher from './components/TopCoinFetcher';\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  LineSeries\n} from 'react-vis';\nimport {curveCatmullRom} from 'd3-shape';\n\nexport default function BitcoinTester() {\n\n  // const lookupTable  = [\n  //   {symbol: 'btc', id: 'bitcoin'},\n  //   {symbol: 'eth', id: 'ethereum'},\n  //   {symbol: 'ada', id: 'cardano'},\n  //   {symbol: 'dot', id: 'polkadot'},\n  //   {symbol: 'ltc', id: 'litecoin'},\n  // ]\n\n  const [coinPrices, setCoinPrices] = React.useState([])\n  const [yScale, setYScale] = React.useState('linear')\n  const [coin, setCoin] = React.useState([])\n  const [topCoins, setTopCoins] = React.useState([])\n\n  React.useEffect(() => {\n    async function getTopCoins() {\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\n      const data = await res.json()\n\n      setTopCoins(data)\n      setCoin(data[0])\n    }\n\n    getTopCoins()\n  }, [])\n\n  React.useEffect(() => {\n    async function getPrices() {\n      const time = Math.floor(Date.now() / 1000)\n\n      // const coinId = lookupTable.filter(item => item.symbol === coin).map(item => item.id)\n\n      console.log(`coin.id = ${coin.id}`)\n\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\n      const data = await res.json()\n      \n      setCoinPrices(data.prices)\n    }\n\n    if (coin.symbol !== undefined) {\n      getPrices()\n    }\n  }, [coin])\n\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\n    let result = [];\n    coinPrices.map(entry => {\n      let newDate = dayjs(entry[0]).format(\"MM/DD/YYYY\");\n      let obj = {date: newDate, price: entry[1]}\n      result.push(obj)\n    })\n\n  //  const options = {\n  //     responsive: true\n  //   };\n\n  \n  const data = {\n    labels: [''],\n    datasets: [\n      {\n        label: 'dataset 1',\n        data: result\n      }\n    ]\n  }\n\n    return (\n      <div>\n<Dropdown text={coin.symbol.toUpperCase()} pointing className='link item'>\n  <Dropdown.Menu>\n    {topCoins.slice(0, 20).map(topCoin => (\n      <Dropdown.Item onClick={() => setCoin(topCoin)}>{topCoin.symbol.toUpperCase()}</Dropdown.Item>\n      ))}\n  </Dropdown.Menu>\n</Dropdown>\n<Dropdown text={yScale === 'linear' ? 'Linear' : 'Log'} pointing className='link item'>\n  <Dropdown.Menu>\n      <Dropdown.Item onClick={() => setYScale('linear')}>Linear</Dropdown.Item>\n      <Dropdown.Item onClick={() => setYScale('log')}>Log</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n<XYPlot width={300} height={300}>\n      <HorizontalGridLines style={{stroke: '#B7E9ED'}} />\n      <VerticalGridLines style={{stroke: '#B7E9ED'}} />\n      <XAxis\n        title=\"X Axis\"\n        style={{\n          line: {stroke: '#ADDDE1'},\n          ticks: {stroke: '#ADDDE1'},\n          text: {stroke: 'none', fill: '#6b6b76', fontWeight: 600}\n        }}\n      />\n      <YAxis title=\"Y Axis\" />\n      <LineSeries\n        className=\"first-series\"\n        data={[{x: 1, y: 3}, {x: 2, y: 5}, {x: 3, y: 15}, {x: 4, y: 12}]}\n        style={{\n          strokeLinejoin: 'round',\n          strokeWidth: 4\n        }}\n      />\n      <LineSeries className=\"second-series\" data={null} />\n      <LineSeries\n        className=\"third-series\"\n        curve={'curveMonotoneX'}\n        data={[{x: 1, y: 10}, {x: 2, y: 4}, {x: 3, y: 2}, {x: 4, y: 15}]}\n        strokeDasharray=\"7, 3\"\n      />\n      <LineSeries\n        className=\"fourth-series\"\n        curve={curveCatmullRom.alpha(0.5)}\n        data={[{x: 1, y: 7}, {x: 2, y: 11}, {x: 3, y: 9}, {x: 4, y: 2}]}\n      />\n    </XYPlot>\n\n</div>\n    )\n  } else {\n    return (\n      <Segment>\n        <Dimmer active>\n          <Loader />\n        </Dimmer>\n      </Segment>\n    )\n  }\n}\n\n{/* <ResponsiveContainer height={600}>\n  <LineChart \n    data={result} \n    margin={{ top: 10, right: 20, left: 20, bottom: 5 }}\n    >\n    <XAxis \n      dataKey=\"date\"\n      />\n    <YAxis\n      scale={yScale === 'linear' ? 'linear' : 'log'}\n      domain={['auto', 'auto']}\n      />\n    <Line  \n      dataKey=\"price\"\n      stroke=\"#8884d8\"\n      dot={false}\n      />\n    <Tooltip \n      formatter={value => `$${value.toFixed(2)}`}\n      />\n  </LineChart>\n</ResponsiveContainer> */}","import React from \"react\"\nimport Home from \"./pages/home/Home.js\"\nimport MemeGenerator from \"./pages/projects/meme-generator/MemeGenerator.js\"\nimport BitcoinTester from \"./pages/projects/bitcoin-tester/BitcoinTester.js\";\nimport Navbar from \"./components/Navbar/Navbar\"\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\n\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />}/>\n          <Route exact path=\"/projects/meme-generator\" element={<MemeGenerator />}/>\n          <Route exact path=\"/projects/bitcoin-tester\" element={<BitcoinTester />}/>\n        </Routes>\n      </Router>\n    </div>\n  )\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}