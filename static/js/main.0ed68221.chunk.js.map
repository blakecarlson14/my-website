{"version":3,"sources":["components/Navbar/Navbar.js","pages/home/Home.js","pages/projects/meme-generator/images/troll-face.png","pages/projects/meme-generator/components/Header.js","pages/projects/meme-generator/components/Meme.js","pages/projects/meme-generator/MemeGenerator.js","pages/projects/bitcoin-tester/BitcoinTester.js","App.js","index.js"],"names":["Navbar","navigate","useNavigate","Menu","Item","onClick","Dropdown","text","pointing","className","Home","Header","src","trollFace","Meme","React","useState","topText","bottomText","randomImage","meme","setMeme","allMemes","setAllMemes","handleChange","event","target","name","value","prevMeme","useEffect","a","fetch","res","json","data","memes","getMemes","type","placeholder","onChange","randomNumber","Math","floor","random","length","url","Image","MemeGenerator","BitcoinTester","coinPrice","setCoinPrice","yScale","setYScale","coin","setCoin","fetchCoin","prices","console","log","getPrices","result","map","entry","obj","date","dayjs","format","price","push","textLabel","ResponsiveContainer","height","LineChart","XAxis","dataKey","YAxis","scale","domain","Line","stroke","dot","Tooltip","formatter","toFixed","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ed68221.chunk.js","sourcesContent":["import React from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, Dropdown } from \"semantic-ui-react\"\n\nexport default function Navbar() {\n  const navigate = useNavigate();\n\n  return (\n    <Menu>\n      <Menu.Item onClick={() =>\n        navigate('/')\n      }>\n        Home\n      </Menu.Item>\n      <Dropdown text='Projects' pointing className='link item'>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() =>\n            navigate(`/projects/meme-generator`)\n          }>\n            Meme Generator\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() =>\n            navigate('/projects/bitcoin-tester')\n          }>\n            Bitcoin Tester\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu>\n  )\n}","import React from \"react\"\nimport Navbar from \"../../components/Navbar/Navbar\"\n\nexport default function Home() {\n  return(\n    <div>\n      <h1>Welcome to blakeacarlson.com!</h1>\n      <h3>This website is under development</h3>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/troll-face.ef4deb6e.png\";","import React from \"react\"\nimport trollFace from \"../images/troll-face.png\"\n\nexport default function Header() {\n    return (\n        <header className=\"meme--header\">\n            <img \n                src={trollFace} \n                className=\"meme--header--image\"\n            />\n            <h2 className=\"meme--header--title\">Meme Generator</h2>\n            <h4 className=\"meme--header--project\">React Course - Project 3</h4>\n        </header>\n    )\n}","import React from \"react\"\nimport { Image } from \"semantic-ui-react\"\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        async function getMemes() {\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\n            const data = await res.json()\n            setAllMemes(data.data.memes)\n        }\n        getMemes()\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <Image src={meme.randomImage} className=\"meme--image\"/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}","import React from 'react'\nimport Header from './components/Header'\nimport Meme from './components/Meme'\nimport './style.css'\n\nexport default function MemeGenerator() {\n  return(\n    <div>\n      <Header />\n      <Meme />\n    </div>\n  )\n}","import React from 'react'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport moment from 'moment'\nimport dayjs from 'dayjs'\nimport { Dropdown } from 'semantic-ui-react'\n\nexport default function BitcoinTester() {\n  const [coinPrice, setCoinPrice] = React.useState([])\n  const [yScale, setYScale] = React.useState('linear')\n  const [coin, setCoin] = React.useState('btc')\n\n  React.useEffect(() => {\n      async function getPrices() {\n          let fetchCoin = 'bitcoin'\n          switch(coin) {\n            case 'eth':\n              fetchCoin = 'ethereum'\n              break;\n            case 'dot':\n              fetchCoin = 'polkadot'\n              break;\n            default:\n              break;\n          }\n          const res = await fetch(`https://api.coingecko.com/api/v3/coins/${fetchCoin}/market_chart/range/?vs_currency=usd&from=946733027&to=1640157827`)\n          const data = await res.json()\n          \n          setCoinPrice(data.prices)\n          console.log(`coin ${coin}`)\n      }\n      getPrices()\n  }, [coin])\n\n  let result = [];\n  coinPrice.map(entry => {\n    let newDate = dayjs(entry[0]).format(\"MM/DD/YYYY\");\n    let obj = {date: newDate, price: entry[1]}\n    result.push(obj)\n  })\n\n  let textLabel = 'BTC'\n  switch(coin) {\n    case 'eth':\n      textLabel = 'ETH'\n      break;\n    case 'dot':\n      textLabel = 'DOT'\n      break;\n    default:\n      break;\n  }\n\n  return(\n    <div>\n      <Dropdown text={textLabel} pointing className='link item'>\n        <Dropdown.Menu>\n            <Dropdown.Item onClick={() => setCoin('btc')}>BTC</Dropdown.Item>\n            <Dropdown.Item onClick={() => setCoin('eth')}>ETH</Dropdown.Item>\n            <Dropdown.Item onClick={() => setCoin('dot')}>DOT</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown text={yScale === 'linear' ? 'Linear' : 'Log'} pointing className='link item'>\n        <Dropdown.Menu>\n            <Dropdown.Item onClick={() => setYScale('linear')}>Linear</Dropdown.Item>\n            <Dropdown.Item onClick={() => setYScale('log')}>Log</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n      <ResponsiveContainer height={600}>\n        <LineChart data={result}>\n          <XAxis \n            dataKey=\"date\"\n            />\n          <YAxis\n            scale={yScale === 'linear' ? 'linear' : 'log'}\n            domain={['auto', 'auto']}\n            />\n          <Line  \n            dataKey=\"price\"\n            stroke=\"#8884d8\"\n            dot={false}\n            />\n          <Tooltip \n            formatter={value => `$${value.toFixed(2)}`}\n            />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}","import React from \"react\"\nimport Home from \"./pages/home/Home.js\"\nimport MemeGenerator from \"./pages/projects/meme-generator/MemeGenerator.js\"\nimport BitcoinTester from \"./pages/projects/bitcoin-tester/BitcoinTester.js\";\nimport Navbar from \"./components/Navbar/Navbar\"\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\n\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />}/>\n          <Route exact path=\"/projects/meme-generator\" element={<MemeGenerator />}/>\n          <Route exact path=\"/projects/bitcoin-tester\" element={<BitcoinTester />}/>\n        </Routes>\n      </Router>\n    </div>\n  )\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}