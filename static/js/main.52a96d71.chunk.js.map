{"version":3,"sources":["components/Navbar/Navbar.js","pages/home/Home.js","pages/projects/meme-generator/images/troll-face.png","pages/projects/meme-generator/components/Header.js","pages/projects/meme-generator/components/Meme.js","pages/projects/meme-generator/MemeGenerator.js","pages/projects/bitcoin-tester/BitcoinTester.js","pages/projects/crypto-charts/CryptoCharts.js","pages/projects/mtg/components/MtgForm.js","pages/projects/mtg/Mtg.js","App.js","index.js"],"names":["Navbar","navigate","useNavigate","Menu","Item","onClick","Dropdown","text","pointing","className","DropdownHeader","DropdownDivider","DropdownItem","Home","Header","src","trollFace","Meme","React","useState","topText","bottomText","randomImage","meme","setMeme","allMemes","setAllMemes","handleChange","event","target","name","value","prevMeme","useEffect","a","fetch","res","json","data","memes","getMemes","type","placeholder","onChange","randomNumber","Math","floor","random","length","url","Image","MemeGenerator","BitcoinTester","topCoins","setTopCoins","coinPrices","setCoinPrices","coin","handleSubmit","inputs","preventDefault","console","log","getTopCoins","time","Date","now","id","prices","getPrices","dropdownOptions","map","entry","obj","symbol","toUpperCase","push","undefined","result","i","day","futureDate","getFullYear","getMonth","getDate","futureDays","moment","diff","currentPrice","change","date","Form","widths","size","onSubmit","Select","label","options","Input","fluid","Button","ResponsiveContainer","height","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","timeStr","format","domain","scale","YAxis","Label","position","angle","Line","dot","Tooltip","formatter","toFixed","labelFormatter","cursor","CryptoCharts","yScale","setYScale","setCoin","yearTicks","price","slice","topCoin","ticks","offset","stroke","Segment","Dimmer","active","Loader","MtgForm","cmc","whiteCheck","blackCheck","blueCheck","greenCheck","redCheck","andor","setInputs","e","handleCheck","checked","Box","FormControl","sx","flexDirection","FormControlLabel","control","Checkbox","TextField","select","MenuItem","variant","color","Mtg","cards","setCards","setIsFetching","input","getScryfallCards","nextPage","colors","colorString","join","lookup","lookupString","has_more","setTimeout","next_page","ImageList","cols","card","image_uris","normal","ImageListItem","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52a96d71.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Menu, Dropdown, DropdownHeader, DropdownDivider, DropdownItem } from \"semantic-ui-react\"\r\n\r\nexport default function Navbar () {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Menu>\r\n      <Menu.Item onClick={ () =>\r\n        navigate('/')\r\n      }>\r\n        Home\r\n      </Menu.Item>\r\n      <Dropdown text='Projects' pointing className='link item'>\r\n        <Dropdown.Menu>\r\n          <DropdownHeader>Scrimba</DropdownHeader>\r\n          <Dropdown.Item onClick={ () =>\r\n            navigate(`/projects/meme-generator`)\r\n          }>\r\n            Meme Generator\r\n          </Dropdown.Item>\r\n          <DropdownDivider />\r\n          <DropdownHeader>Crypto</DropdownHeader>\r\n          <Dropdown.Item onClick={ () =>\r\n            navigate('/projects/bitcoin-tester')\r\n          }>\r\n            Bitcoin Tester\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={ () =>\r\n            navigate('/projects/crypto-charts')\r\n          }>\r\n            Charts\r\n          </Dropdown.Item>\r\n          <DropdownDivider />\r\n          <DropdownHeader>MTG</DropdownHeader>\r\n          <DropdownItem onClick={ () =>\r\n            navigate('/projects/mtg')\r\n          }>\r\n            MTG Card Lookup\r\n          </DropdownItem>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </Menu>\r\n  )\r\n}","import React from \"react\"\r\nimport Navbar from \"../../components/Navbar/Navbar\"\r\n\r\nexport default function Home() {\r\n  return(\r\n    <div>\r\n      <h1>Welcome to blakeacarlson.com!</h1>\r\n      <h3>This website is under development</h3>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/troll-face.ef4deb6e.png\";","import React from \"react\"\r\nimport trollFace from \"../images/troll-face.png\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"meme--header\">\r\n            <img \r\n                src={trollFace} \r\n                className=\"meme--header--image\"\r\n            />\r\n            <h2 className=\"meme--header--title\">Meme Generator</h2>\r\n            <h4 className=\"meme--header--project\">React Course - Project 3</h4>\r\n        </header>\r\n    )\r\n}","import React from \"react\"\r\nimport { Image } from \"semantic-ui-react\"\r\n\r\nexport default function Meme() {\r\n    \r\n    const [meme, setMeme] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \r\n    })\r\n    const [allMemes, setAllMemes] = React.useState([])\r\n    \r\n    React.useEffect(() => {\r\n        async function getMemes() {\r\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\r\n            const data = await res.json()\r\n            setAllMemes(data.data.memes)\r\n        }\r\n        getMemes()\r\n    }, [])\r\n    \r\n    function getMemeImage() {\r\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\r\n        const url = allMemes[randomNumber].url\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomImage: url\r\n        }))\r\n        \r\n    }\r\n    \r\n    function handleChange(event) {\r\n        const {name, value} = event.target\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            [name]: value\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <main>\r\n            <div className=\"form\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Top text\"\r\n                    className=\"form--input\"\r\n                    name=\"topText\"\r\n                    value={meme.topText}\r\n                    onChange={handleChange}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Bottom text\"\r\n                    className=\"form--input\"\r\n                    name=\"bottomText\"\r\n                    value={meme.bottomText}\r\n                    onChange={handleChange}\r\n                />\r\n                <button \r\n                    className=\"form--button\"\r\n                    onClick={getMemeImage}\r\n                >\r\n                    Get a new meme image 🖼\r\n                </button>\r\n            </div>\r\n            <div className=\"meme\">\r\n                <Image src={meme.randomImage} className=\"meme--image\"/>\r\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport Header from './components/Header'\r\nimport Meme from './components/Meme'\r\nimport './style.css'\r\n\r\nexport default function MemeGenerator() {\r\n  return(\r\n    <div>\r\n      <Header />\r\n      <Meme />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { DropdownMenu, Dropdown, Form } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { LineChart, ResponsiveContainer, XAxis, Label, Line, Tooltip, YAxis } from 'recharts';\r\nimport moment from 'moment';\r\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\n\r\nexport default function BitcoinTester() {\r\n  const [topCoins, setTopCoins] = React.useState([])\r\n  const [coinPrices, setCoinPrices] = React.useState([])\r\n  const [coin, setCoin] = React.useState([])\r\n  const [inputs, setInputs] = useState([])\r\n\r\n  React.useEffect(() => {\r\n    async function getTopCoins () {\r\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\r\n      const data = await res.json()\r\n\r\n      setTopCoins(data)\r\n    }\r\n\r\n    getTopCoins()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    async function getPrices () {\r\n      const time = Math.floor(Date.now() / 1000)\r\n\r\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\r\n      const data = await res.json()\r\n\r\n      setCoinPrices(data.prices)\r\n    }\r\n\r\n    getPrices()\r\n  }, [coin])\r\n\r\n  function handleSubmit(inputs) {\r\n    inputs.preventDefault();\r\n    console.log(inputs.coin)\r\n  }\r\n\r\n  let dropdownOptions = []\r\n    \r\n    topCoins.map(entry => {\r\n      let obj = {text: entry.symbol.toUpperCase(), value: entry.symbol}\r\n      dropdownOptions.push(obj)\r\n    })\r\n\r\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\r\n    let result = [];\r\n    let NUM_YEARS = 1;\r\n    for(let i = 0; i < coinPrices.length; i++) {\r\n      let day = new Date(coinPrices[i][0])\r\n      let futureDate = new Date(day.getFullYear() + NUM_YEARS, day.getMonth(), day.getDate())\r\n      let diffDays = moment(futureDate).diff(day, \"days\")\r\n      let futureDays = i + diffDays\r\n      let currentPrice = coinPrices[i][1]\r\n\r\n      if( futureDays < coinPrices.length) {\r\n        let futurePrice = coinPrices[futureDays][1]\r\n        let change = ((futurePrice / currentPrice) - 1) * 100\r\n\r\n\r\n        let obj = { date: coinPrices[i][0], change: change}\r\n        result.push(obj)\r\n      }\r\n      // if (futureDate.getMonth() === 1 && futureDate.getDate() === 29) {\r\n      //   console.log(`day = ${day}, futureDate=${futureDate}`)\r\n      // }\r\n    }\r\n\r\n    let yScale = 'linear'\r\n\r\n    return (\r\n      <div>\r\n        <Form widths='equal' size='small' onSubmit={handleSubmit}>\r\n            <Form.Select\r\n              label='Coin to HODL?'\r\n              id='coin'\r\n              options={dropdownOptions}\r\n              placeholder=''\r\n            />\r\n            <Form.Input fluid label='How many years to HODL?' placeholder='1' id='time'/>\r\n          <Form.Button>Submit</Form.Button>\r\n        </Form>\r\n        <ResponsiveContainer height={ 600 }>\r\n            <LineChart\r\n              data={ result }\r\n              margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\r\n            >\r\n            <XAxis\r\n                dataKey=\"date\"\r\n                type=\"number\"\r\n                tickFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\r\n                domain={ ['auto', 'auto'] }\r\n                scale={ 'time' }\r\n              ></XAxis>\r\n            <YAxis\r\n                scale={ yScale === 'linear' ? 'linear' : 'log' }\r\n                domain={ ['auto', 'auto'] }\r\n              >\r\n                <Label value=\"Percentage Change\" position=\"left\" angle={ -90 } />\r\n              </YAxis>\r\n            <Line dataKey=\"change\" dot={false}/>\r\n            <Tooltip\r\n                formatter={ (value) => `${value.toFixed(2)}%` }\r\n                labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\r\n                cursor={ true }\r\n              />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        <Form widths='equal' size='small' onSubmit={handleSubmit}>\r\n            <Form.Select\r\n              label='Coin to HODL?'\r\n              options={dropdownOptions}\r\n              placeholder=''\r\n            />\r\n            <Form.Input fluid label='How many years to HODL?' placeholder='1' />\r\n          <Form.Button>Submit</Form.Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Label } from 'recharts';\r\nimport moment from 'moment'\r\nimport { Dropdown, Loader, Segment, Dimmer } from 'semantic-ui-react'\r\n\r\nexport default function CryptoCharts () {\r\n\r\n  const [coinPrices, setCoinPrices] = React.useState([])\r\n  const [yScale, setYScale] = React.useState('linear')\r\n  const [coin, setCoin] = React.useState([])\r\n  const [topCoins, setTopCoins] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    async function getTopCoins () {\r\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\r\n      const data = await res.json()\r\n\r\n      setTopCoins(data)\r\n      setCoin(data[0])\r\n    }\r\n\r\n    getTopCoins()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    async function getPrices () {\r\n      const time = Math.floor(Date.now() / 1000)\r\n\r\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\r\n      const data = await res.json()\r\n\r\n      setCoinPrices(data.prices)\r\n    }\r\n\r\n    if (coin.symbol !== undefined) {\r\n      getPrices()\r\n    }\r\n  }, [coin])\r\n\r\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\r\n    let result = [];\r\n    let yearTicks = []\r\n    coinPrices.map(entry => {\r\n      let day = new Date(entry[0])\r\n\r\n      if (day.getDate() === 1 && day.getMonth() === 0) {\r\n        yearTicks.push(day)\r\n      }\r\n      let obj = { date: entry[0], price: entry[1] }\r\n      result.push(obj)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <Dropdown text={ coin.symbol.toUpperCase() } pointing className='link item'>\r\n          <Dropdown.Menu>\r\n            { topCoins.slice(0, 20).map(topCoin => (\r\n              <Dropdown.Item onClick={ () => setCoin(topCoin) }>{ topCoin.symbol.toUpperCase() }</Dropdown.Item>\r\n            )) }\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Dropdown text={ yScale === 'linear' ? 'Linear' : 'Log' } pointing className='link item'>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item onClick={ () => setYScale('linear') }>Linear</Dropdown.Item>\r\n            <Dropdown.Item onClick={ () => setYScale('log') }>Log</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <ResponsiveContainer height={ 600 }>\r\n          <LineChart\r\n            data={ result }\r\n            margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\r\n          >\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              type=\"number\"\r\n              ticks={ yearTicks }\r\n              tickFormatter={ timeStr => moment(timeStr).format('YYYY') }\r\n              domain={ ['auto', 'auto'] }\r\n              scale={ 'time' }\r\n            >\r\n              <Label value=\"Date\" offset={ 0 } position=\"bottom\" />\r\n            </XAxis>\r\n            <YAxis\r\n              scale={ yScale === 'linear' ? 'linear' : 'log' }\r\n              domain={ ['auto', 'auto'] }\r\n            >\r\n              <Label value=\"Price (USD)\" position=\"left\" angle={ -90 } />\r\n            </YAxis>\r\n            <Line\r\n              dataKey=\"price\"\r\n              stroke=\"#8884d8\"\r\n              dot={ false }\r\n            />\r\n            <Tooltip\r\n              formatter={ (value) => `$${value.toFixed(2)}` }\r\n              labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\r\n              cursor={ true }\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <Segment>\r\n        <Dimmer active>\r\n          <Loader />\r\n        </Dimmer>\r\n      </Segment>\r\n    )\r\n  }\r\n}","import { Button, Checkbox, FormControl, FormControlLabel, FormLabel, Grid, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React from 'react'\r\n\r\nconst MtgForm = ({ handleSubmit }) => {\r\n  const [inputs, setInputs] = React.useState({ \r\n    cmc: null,\r\n    whiteCheck: false,\r\n    blackCheck: false,\r\n    blueCheck: false,\r\n    greenCheck: false,\r\n    redCheck: false,\r\n    andor: 'and'\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n\r\n    console.log(`name: ${name} value: ${value}`)\r\n  }\r\n\r\n  const handleCheck = (e) => {\r\n    const { name, checked } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: checked,\r\n    });\r\n\r\n    console.log(`name: ${name} value: ${checked}`)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ (e) => {\r\n      handleSubmit(e, inputs) \r\n    }}>\r\n      <Box>\r\n        <FormControl sx={ { flexDirection: \"row\" } }>\r\n          <FormControlLabel control={ <Checkbox name='whiteCheck' checked={inputs.whiteCheck} onChange={handleCheck}/> } label=\"White\" />\r\n          <FormControlLabel control={ <Checkbox name='blackCheck' checked={inputs.blackCheck} onChange={handleCheck}/> } label=\"Black\" />\r\n          <FormControlLabel control={ <Checkbox name='greenCheck' checked={inputs.greenCheck} onChange={handleCheck}/> } label=\"Green\" />\r\n          <FormControlLabel control={ <Checkbox name='redCheck' checked={inputs.redCheck} onChange={handleCheck}/> } label=\"Red\" />\r\n          <FormControlLabel control={ <Checkbox name='blueCheck' checked={inputs.blueCheck} onChange={handleCheck}/> } label=\"Blue\" />\r\n          <TextField \r\n            value={inputs.andor}\r\n            onChange={handleChange}\r\n            select // tell TextField to render select\r\n            label=\"AND/OR\"\r\n            name=\"andor\"\r\n          >\r\n            <MenuItem value={'and'}>AND</MenuItem>\r\n            <MenuItem value={'or'}>OR</MenuItem>\r\n          </TextField>\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <FormControl>\r\n          <TextField\r\n            name=\"cmc\"\r\n            type=\"text\"\r\n            label=\"CMC\"\r\n            onChange={ handleChange }\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MtgForm\r\n\r\n{/* <Form onSubmit={handleSubmit}>\r\n          <Form.Input label='Color' placeholder='Red' name='color' onChange={handleChange}/>\r\n          <Form.Input label='CMC' placeholder='1' name='cmc' onChange={handleChange}/>\r\n        <Form.Button>SUBMIT</Form.Button>\r\n      </Form> */}","import React from 'react'\r\nimport MtgForm from './components/MtgForm'\r\nimport { ImageList, ImageListItem } from '@mui/material'\r\n\r\n\r\nconst Mtg = () => {\r\n  const [inputs, setInputs] = React.useState([])\r\n  const [cards, setCards] = React.useState([])\r\n  const [isFetching, setIsFetching] = React.useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (input) => {\r\n    async function getScryfallCards (nextPage) {\r\n      let colors=[]\r\n      if (input.whiteCheck) {\r\n        colors.push('w')\r\n      }\r\n      if (input.blackCheck) {\r\n        colors.push('b')\r\n      }\r\n      if (input.greenCheck) {\r\n        colors.push('g')\r\n      }\r\n      if (input.redCheck) {\r\n        colors.push('r')\r\n      }\r\n      if (input.blueCheck) {\r\n        colors.push('u')\r\n      }\r\n\r\n      let colorString = ''\r\n\r\n      colorString = colors.join('')\r\n\r\n      let lookup = []\r\n\r\n      if (colorString !== '') {\r\n        if (input.andor === 'and') {\r\n          lookup.push(`c%3D${colorString}`)\r\n        } else {\r\n          lookup.push(`c%3C%3D${colorString}`)\r\n        }\r\n      }\r\n\r\n      if(input.cmc) {\r\n        lookup.push(`cmc%3D${input.cmc}`)\r\n      }\r\n\r\n      let lookupString = lookup.join('+')\r\n\r\n      if (lookupString !== '') {\r\n        try {\r\n          if (nextPage) {\r\n            const res = await fetch(nextPage)\r\n            const data = await res.json()\r\n            setCards( cards => {\r\n              return [...cards, ...data.data]\r\n            })\r\n            if (data.has_more) {\r\n              setTimeout(function(){getScryfallCards(data.next_page)}, 100)\r\n            }\r\n          } else {\r\n            const res = await fetch(`https://api.scryfall.com/cards/search?q=${lookupString}`)\r\n            const data = await res.json()\r\n            setCards( cards => {\r\n              return [...cards, ...data.data]\r\n            })\r\n            if (data.has_more) {\r\n              setTimeout(function(){getScryfallCards(data.next_page)}, 100)\r\n            }\r\n          }\r\n        }\r\n        catch (error) {\r\n          console.log(`error: ${error}`)\r\n        }\r\n      }\r\n      else {\r\n        console.log('error')\r\n      }\r\n    }\r\n\r\n    async function getCards () {\r\n      let colors=[]\r\n      if (input.whiteCheck) {\r\n        colors.push('white')\r\n      }\r\n      if (input.blackCheck) {\r\n        colors.push('black')\r\n      }\r\n      if (input.greenCheck) {\r\n        colors.push('green')\r\n      }\r\n      if (input.redCheck) {\r\n        colors.push('red')\r\n      }\r\n      if (input.blueCheck) {\r\n        colors.push('blue')\r\n      }\r\n\r\n      let colorString = ''\r\n\r\n      if (input.andor === 'and') {\r\n        colorString = colors.join(',')\r\n      } else {\r\n        colorString = colors.join('|')\r\n      }\r\n\r\n      let lookup = []\r\n\r\n      if (colorString !== '') {\r\n        lookup.push(`colors=${colorString}`)\r\n      }\r\n\r\n      if(input.cmc) {\r\n        lookup.push(`cmc=${input.cmc}`)\r\n      }\r\n\r\n      let lookupString = lookup.join('+')\r\n\r\n      console.log(`lookupString: ${lookupString}`)\r\n\r\n      if (lookupString !== '') {\r\n        try {\r\n          const res = await fetch(`https://api.magicthegathering.io/v1/cards?${lookupString}`)\r\n          // const res = await fetch(`https://api.scryfall.com/cards/search?${lookupString}`)\r\n          const data = await res.json()\r\n\r\n          setCards(data.cards)\r\n        }\r\n        catch (error) {\r\n          console.log(`error: ${error}`)\r\n        }\r\n      }\r\n      else {\r\n        console.log('error')\r\n      }\r\n    }\r\n    setIsFetching(true)\r\n    getScryfallCards()\r\n    setIsFetching(false)\r\n  }\r\n\r\n  if (cards && cards.length > 0) {\r\n    return(\r\n      <div>\r\n        <MtgForm handleSubmit={(e, input) => {\r\n          e.preventDefault()\r\n          handleSubmit(input)\r\n        }}/>\r\n        <div>\r\n          <ImageList cols={8}>\r\n          {console.log(`cards3: ${cards.length}`)}\r\n          {cards.map(card => (\r\n            card?.image_uris?.normal ?\r\n                <ImageListItem>\r\n                  <img\r\n                    src={card?.image_uris?.normal}\r\n                  />\r\n                </ImageListItem> :\r\n                null\r\n            ))}\r\n          </ImageList>\r\n        </div> \r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <div>\r\n        <MtgForm handleSubmit={(e, input) => {\r\n          e.preventDefault()\r\n          handleSubmit(input)\r\n        }}/>\r\n        </div>)\r\n  }\r\n}\r\nexport default Mtg\r\n\r\n{/* <ImageList cols={8}>\r\n            {cards.map(card => (\r\n              card['image_uris']['normal'] ?\r\n                <ImageListItem>\r\n                  <img\r\n                    src={card['image_uris']['normal']}\r\n                  />\r\n                </ImageListItem> :\r\n                null\r\n            ))}\r\n            </ImageList> */}\r\n","import React from \"react\"\r\nimport Home from \"./pages/home/Home.js\"\r\nimport MemeGenerator from \"./pages/projects/meme-generator/MemeGenerator\"\r\nimport BitcoinTester from \"./pages/projects/bitcoin-tester/BitcoinTester\";\r\nimport CryptoCharts from \"./pages/projects/crypto-charts/CryptoCharts\"\r\nimport Mtg from \"./pages/projects/mtg/Mtg\"\r\nimport Navbar from \"./components/Navbar/Navbar\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home />}/>\r\n          <Route exact path=\"/projects/meme-generator\" element={<MemeGenerator />}/>\r\n          <Route exact path=\"/projects/bitcoin-tester\" element={<BitcoinTester />}/>\r\n          <Route exact path=\"/projects/crypto-charts\" element={<CryptoCharts />}/>\r\n          <Route exact path=\"/projects/mtg\" element={<Mtg />}/>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}