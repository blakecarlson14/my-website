{"version":3,"sources":["components/Navbar/Navbar.js","pages/home/Home.js","pages/projects/meme-generator/images/troll-face.png","pages/projects/meme-generator/components/Header.js","pages/projects/meme-generator/components/Meme.js","pages/projects/meme-generator/MemeGenerator.js","pages/projects/bitcoin-tester/BitcoinTester.js","pages/projects/crypto-charts/CryptoCharts.js","pages/projects/mtg/components/MtgForm.js","pages/projects/mtg/Mtg.js","App.js","index.js"],"names":["Navbar","navigate","useNavigate","Menu","Item","onClick","Dropdown","text","pointing","className","DropdownHeader","DropdownDivider","DropdownItem","Home","Header","src","trollFace","Meme","React","useState","topText","bottomText","randomImage","meme","setMeme","allMemes","setAllMemes","handleChange","event","target","name","value","prevMeme","useEffect","a","fetch","res","json","data","memes","getMemes","type","placeholder","onChange","randomNumber","Math","floor","random","length","url","Image","MemeGenerator","BitcoinTester","topCoins","setTopCoins","coinPrices","setCoinPrices","coin","handleSubmit","inputs","preventDefault","console","log","getTopCoins","time","Date","now","id","prices","getPrices","dropdownOptions","map","entry","obj","symbol","toUpperCase","push","undefined","result","i","day","futureDate","getFullYear","getMonth","getDate","futureDays","moment","diff","currentPrice","change","date","Form","widths","size","onSubmit","Select","label","options","Input","fluid","Button","ResponsiveContainer","height","LineChart","margin","top","right","left","bottom","XAxis","dataKey","tickFormatter","timeStr","format","domain","scale","YAxis","Label","position","angle","Line","dot","Tooltip","formatter","toFixed","labelFormatter","cursor","CryptoCharts","yScale","setYScale","setCoin","yearTicks","price","slice","topCoin","ticks","offset","stroke","Segment","Dimmer","active","Loader","initialState","whiteCheck","blackCheck","blueCheck","greenCheck","redCheck","andor","cmc","power","toughness","legal","set","commonCheck","uncommonCheck","rareCheck","mythicRareCheck","currency","currencyCompare","MtgForm","isFetching","setInputs","e","handleCheck","checked","Grid","item","FormControl","TextField","style","sx","flexDirection","FormControlLabel","control","Checkbox","marginLeft","select","MenuItem","width","marginTop","marginBottom","fullWidth","InputProps","startAdornment","InputAdornment","LoadingButton","loading","variant","color","Mtg","cards","setCards","setIsFetching","input","getScryfallCards","nextPage","colorString","colors","join","lookup","encodeURIComponent","rarityString","rarities","priceString","concat","lookupString","then","response","has_more","setTimeout","next_page","error","ImageList","cols","card","image_uris","normal","ImageListItem","card_faces","App","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dc3953d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Menu, Dropdown, DropdownHeader, DropdownDivider, DropdownItem } from \"semantic-ui-react\"\r\n\r\nexport default function Navbar () {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Menu>\r\n      <Menu.Item onClick={ () =>\r\n        navigate('/')\r\n      }>\r\n        Home\r\n      </Menu.Item>\r\n      <Dropdown text='Projects' pointing className='link item'>\r\n        <Dropdown.Menu>\r\n          <DropdownHeader>Scrimba</DropdownHeader>\r\n          <Dropdown.Item onClick={ () =>\r\n            navigate(`/projects/meme-generator`)\r\n          }>\r\n            Meme Generator\r\n          </Dropdown.Item>\r\n          <DropdownDivider />\r\n          <DropdownHeader>Crypto</DropdownHeader>\r\n          <Dropdown.Item onClick={ () =>\r\n            navigate('/projects/bitcoin-tester')\r\n          }>\r\n            Bitcoin Tester\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={ () =>\r\n            navigate('/projects/crypto-charts')\r\n          }>\r\n            Charts\r\n          </Dropdown.Item>\r\n          <DropdownDivider />\r\n          <DropdownHeader>MTG</DropdownHeader>\r\n          <DropdownItem onClick={ () =>\r\n            navigate('/projects/mtg')\r\n          }>\r\n            MTG Card Lookup\r\n          </DropdownItem>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </Menu>\r\n  )\r\n}","import React from \"react\"\r\nimport Navbar from \"../../components/Navbar/Navbar\"\r\n\r\nexport default function Home() {\r\n  return(\r\n    <div>\r\n      <h1>Welcome to blakeacarlson.com!</h1>\r\n      <h3>This website is under development</h3>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/troll-face.ef4deb6e.png\";","import React from \"react\"\r\nimport trollFace from \"../images/troll-face.png\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"meme--header\">\r\n            <img \r\n                src={trollFace} \r\n                className=\"meme--header--image\"\r\n            />\r\n            <h2 className=\"meme--header--title\">Meme Generator</h2>\r\n            <h4 className=\"meme--header--project\">React Course - Project 3</h4>\r\n        </header>\r\n    )\r\n}","import React from \"react\"\r\nimport { Image } from \"semantic-ui-react\"\r\n\r\nexport default function Meme() {\r\n    \r\n    const [meme, setMeme] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \r\n    })\r\n    const [allMemes, setAllMemes] = React.useState([])\r\n    \r\n    React.useEffect(() => {\r\n        async function getMemes() {\r\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\r\n            const data = await res.json()\r\n            setAllMemes(data.data.memes)\r\n        }\r\n        getMemes()\r\n    }, [])\r\n    \r\n    function getMemeImage() {\r\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\r\n        const url = allMemes[randomNumber].url\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomImage: url\r\n        }))\r\n        \r\n    }\r\n    \r\n    function handleChange(event) {\r\n        const {name, value} = event.target\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            [name]: value\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <main>\r\n            <div className=\"form\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Top text\"\r\n                    className=\"form--input\"\r\n                    name=\"topText\"\r\n                    value={meme.topText}\r\n                    onChange={handleChange}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Bottom text\"\r\n                    className=\"form--input\"\r\n                    name=\"bottomText\"\r\n                    value={meme.bottomText}\r\n                    onChange={handleChange}\r\n                />\r\n                <button \r\n                    className=\"form--button\"\r\n                    onClick={getMemeImage}\r\n                >\r\n                    Get a new meme image 🖼\r\n                </button>\r\n            </div>\r\n            <div className=\"meme\">\r\n                <Image src={meme.randomImage} className=\"meme--image\"/>\r\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React from 'react'\r\nimport Header from './components/Header'\r\nimport Meme from './components/Meme'\r\nimport './style.css'\r\n\r\nexport default function MemeGenerator() {\r\n  return(\r\n    <div>\r\n      <Header />\r\n      <Meme />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { DropdownMenu, Dropdown, Form } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { LineChart, ResponsiveContainer, XAxis, Label, Line, Tooltip, YAxis } from 'recharts';\r\nimport moment from 'moment';\r\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\n\r\nexport default function BitcoinTester() {\r\n  const [topCoins, setTopCoins] = React.useState([])\r\n  const [coinPrices, setCoinPrices] = React.useState([])\r\n  const [coin, setCoin] = React.useState([])\r\n  const [inputs, setInputs] = useState([])\r\n\r\n  React.useEffect(() => {\r\n    async function getTopCoins () {\r\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\r\n      const data = await res.json()\r\n\r\n      setTopCoins(data)\r\n    }\r\n\r\n    getTopCoins()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    async function getPrices () {\r\n      const time = Math.floor(Date.now() / 1000)\r\n\r\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\r\n      const data = await res.json()\r\n\r\n      setCoinPrices(data.prices)\r\n    }\r\n\r\n    getPrices()\r\n  }, [coin])\r\n\r\n  function handleSubmit(inputs) {\r\n    inputs.preventDefault();\r\n    console.log(inputs.coin)\r\n  }\r\n\r\n  let dropdownOptions = []\r\n    \r\n    topCoins.map(entry => {\r\n      let obj = {text: entry.symbol.toUpperCase(), value: entry.symbol}\r\n      dropdownOptions.push(obj)\r\n    })\r\n\r\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\r\n    let result = [];\r\n    let NUM_YEARS = 1;\r\n    for(let i = 0; i < coinPrices.length; i++) {\r\n      let day = new Date(coinPrices[i][0])\r\n      let futureDate = new Date(day.getFullYear() + NUM_YEARS, day.getMonth(), day.getDate())\r\n      let diffDays = moment(futureDate).diff(day, \"days\")\r\n      let futureDays = i + diffDays\r\n      let currentPrice = coinPrices[i][1]\r\n\r\n      if( futureDays < coinPrices.length) {\r\n        let futurePrice = coinPrices[futureDays][1]\r\n        let change = ((futurePrice / currentPrice) - 1) * 100\r\n\r\n\r\n        let obj = { date: coinPrices[i][0], change: change}\r\n        result.push(obj)\r\n      }\r\n      // if (futureDate.getMonth() === 1 && futureDate.getDate() === 29) {\r\n      //   console.log(`day = ${day}, futureDate=${futureDate}`)\r\n      // }\r\n    }\r\n\r\n    let yScale = 'linear'\r\n\r\n    return (\r\n      <div>\r\n        <Form widths='equal' size='small' onSubmit={handleSubmit}>\r\n            <Form.Select\r\n              label='Coin to HODL?'\r\n              id='coin'\r\n              options={dropdownOptions}\r\n              placeholder=''\r\n            />\r\n            <Form.Input fluid label='How many years to HODL?' placeholder='1' id='time'/>\r\n          <Form.Button>Submit</Form.Button>\r\n        </Form>\r\n        <ResponsiveContainer height={ 600 }>\r\n            <LineChart\r\n              data={ result }\r\n              margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\r\n            >\r\n            <XAxis\r\n                dataKey=\"date\"\r\n                type=\"number\"\r\n                tickFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\r\n                domain={ ['auto', 'auto'] }\r\n                scale={ 'time' }\r\n              ></XAxis>\r\n            <YAxis\r\n                scale={ yScale === 'linear' ? 'linear' : 'log' }\r\n                domain={ ['auto', 'auto'] }\r\n              >\r\n                <Label value=\"Percentage Change\" position=\"left\" angle={ -90 } />\r\n              </YAxis>\r\n            <Line dataKey=\"change\" dot={false}/>\r\n            <Tooltip\r\n                formatter={ (value) => `${value.toFixed(2)}%` }\r\n                labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\r\n                cursor={ true }\r\n              />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        <Form widths='equal' size='small' onSubmit={handleSubmit}>\r\n            <Form.Select\r\n              label='Coin to HODL?'\r\n              options={dropdownOptions}\r\n              placeholder=''\r\n            />\r\n            <Form.Input fluid label='How many years to HODL?' placeholder='1' />\r\n          <Form.Button>Submit</Form.Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, Label } from 'recharts';\r\nimport moment from 'moment'\r\nimport { Dropdown, Loader, Segment, Dimmer } from 'semantic-ui-react'\r\n\r\nexport default function CryptoCharts () {\r\n\r\n  const [coinPrices, setCoinPrices] = React.useState([])\r\n  const [yScale, setYScale] = React.useState('linear')\r\n  const [coin, setCoin] = React.useState([])\r\n  const [topCoins, setTopCoins] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    async function getTopCoins () {\r\n      const res = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc')\r\n      const data = await res.json()\r\n\r\n      setTopCoins(data)\r\n      setCoin(data[0])\r\n    }\r\n\r\n    getTopCoins()\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    async function getPrices () {\r\n      const time = Math.floor(Date.now() / 1000)\r\n\r\n      const res = await fetch(`https://api.coingecko.com/api/v3/coins/${coin.id}/market_chart/range/?vs_currency=usd&from=946733027&to=${time}`)\r\n      const data = await res.json()\r\n\r\n      setCoinPrices(data.prices)\r\n    }\r\n\r\n    if (coin.symbol !== undefined) {\r\n      getPrices()\r\n    }\r\n  }, [coin])\r\n\r\n  if (coinPrices !== undefined && coin.symbol !== undefined) {\r\n    let result = [];\r\n    let yearTicks = []\r\n    coinPrices.map(entry => {\r\n      let day = new Date(entry[0])\r\n\r\n      if (day.getDate() === 1 && day.getMonth() === 0) {\r\n        yearTicks.push(day)\r\n      }\r\n      let obj = { date: entry[0], price: entry[1] }\r\n      result.push(obj)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <Dropdown text={ coin.symbol.toUpperCase() } pointing className='link item'>\r\n          <Dropdown.Menu>\r\n            { topCoins.slice(0, 20).map(topCoin => (\r\n              <Dropdown.Item onClick={ () => setCoin(topCoin) }>{ topCoin.symbol.toUpperCase() }</Dropdown.Item>\r\n            )) }\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Dropdown text={ yScale === 'linear' ? 'Linear' : 'Log' } pointing className='link item'>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item onClick={ () => setYScale('linear') }>Linear</Dropdown.Item>\r\n            <Dropdown.Item onClick={ () => setYScale('log') }>Log</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <ResponsiveContainer height={ 600 }>\r\n          <LineChart\r\n            data={ result }\r\n            margin={ { top: 50, right: 80, left: 80, bottom: 50 } }\r\n          >\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              type=\"number\"\r\n              ticks={ yearTicks }\r\n              tickFormatter={ timeStr => moment(timeStr).format('YYYY') }\r\n              domain={ ['auto', 'auto'] }\r\n              scale={ 'time' }\r\n            >\r\n              <Label value=\"Date\" offset={ 0 } position=\"bottom\" />\r\n            </XAxis>\r\n            <YAxis\r\n              scale={ yScale === 'linear' ? 'linear' : 'log' }\r\n              domain={ ['auto', 'auto'] }\r\n            >\r\n              <Label value=\"Price (USD)\" position=\"left\" angle={ -90 } />\r\n            </YAxis>\r\n            <Line\r\n              dataKey=\"price\"\r\n              stroke=\"#8884d8\"\r\n              dot={ false }\r\n            />\r\n            <Tooltip\r\n              formatter={ (value) => `$${value.toFixed(2)}` }\r\n              labelFormatter={ timeStr => moment(timeStr).format('MM/DD/YYYY') }\r\n              cursor={ true }\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <Segment>\r\n        <Dimmer active>\r\n          <Loader />\r\n        </Dimmer>\r\n      </Segment>\r\n    )\r\n  }\r\n}","import { Button, Checkbox, FormControl, FormControlLabel, FormHelperText, FormLabel, Grid, InputAdornment, InputLabel, MenuItem, Select, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport React from 'react'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  text: '',\r\n  type: '',\r\n  whiteCheck: false,\r\n  blackCheck: false,\r\n  blueCheck: false,\r\n  greenCheck: false,\r\n  redCheck: false,\r\n  andor: 'and',\r\n  cmc: '',\r\n  power: '',\r\n  toughness: '',\r\n  format: '',\r\n  legal: 'legal',\r\n  set: '',\r\n  commonCheck: false,\r\n  uncommonCheck: false,\r\n  rareCheck: false,\r\n  mythicRareCheck: false,\r\n  currency: 'usd',\r\n  currencyCompare: 'lessThan',\r\n  price: '',\r\n}\r\n\r\nconst MtgForm = ({ handleSubmit, isFetching }) => {\r\n  const [inputs, setInputs] = React.useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n\r\n    console.log(`name: ${name} value: ${value}`)\r\n  }\r\n\r\n  const handleCheck = (e) => {\r\n    const { name, checked } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: checked,\r\n    });\r\n\r\n    console.log(`name: ${name} value: ${checked}`)\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setInputs(initialState)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ (e) => {\r\n      handleSubmit(e, inputs) \r\n    }}>\r\n      <Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <TextField\r\n              name=\"name\"\r\n              value={inputs.name}\r\n              onChange={handleChange}\r\n              label=\"Name\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <TextField\r\n              name=\"text\"\r\n              value={inputs.text}\r\n              onChange={handleChange}\r\n              label=\"Text\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <TextField\r\n              name=\"type\"\r\n              value={inputs.type}\r\n              onChange={handleChange}\r\n              label=\"Type\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl sx={ { flexDirection: \"row\" } }>\r\n            <FormControlLabel control={ <Checkbox name='whiteCheck' checked={inputs.whiteCheck} onChange={handleCheck}/> } label=\"White\" style = {{ marginLeft: 10 }}/>\r\n            <FormControlLabel control={ <Checkbox name='blueCheck' checked={inputs.blueCheck} onChange={handleCheck}/> } label=\"Blue\" />\r\n            <FormControlLabel control={ <Checkbox name='blackCheck' checked={inputs.blackCheck} onChange={handleCheck}/> } label=\"Black\" />\r\n            <FormControlLabel control={ <Checkbox name='redCheck' checked={inputs.redCheck} onChange={handleCheck}/> } label=\"Red\" />\r\n            <FormControlLabel control={ <Checkbox name='greenCheck' checked={inputs.greenCheck} onChange={handleCheck}/> } label=\"Green\" />\r\n            <TextField \r\n              value={inputs.andor}\r\n              onChange={handleChange}\r\n              select\r\n              label=\"AND/OR\"\r\n              name=\"andor\"\r\n              style = {{ margin: 10 }}\r\n            >\r\n              <MenuItem value={'and'}>AND</MenuItem>\r\n              <MenuItem value={'or'}>OR</MenuItem>\r\n            </TextField>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid>\r\n          <FormControl>\r\n            <TextField\r\n              type=\"number\"\r\n              name=\"cmc\"\r\n              value={inputs.cmc}\r\n              onChange={ handleChange }\r\n              label=\"CMC\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <TextField\r\n              type=\"number\"\r\n              name=\"power\"\r\n              value={inputs.power}\r\n              onChange={handleChange}\r\n              label=\"Power\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <TextField\r\n              type=\"number\"\r\n              name=\"toughness\"\r\n              value={inputs.toughness}\r\n              onChange={handleChange}\r\n              label=\"Toughness\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl sx={ { flexDirection: \"row\" } } >\r\n            <TextField\r\n              select\r\n              name=\"format\"\r\n              value={inputs.format}\r\n              onChange={handleChange}\r\n              label=\"Format\"\r\n              style = {{ width: 150, marginLeft: 10, marginTop: 10, marginBottom: 10 }}\r\n            >\r\n              <MenuItem value={''}>&nbsp;</MenuItem>\r\n              <MenuItem value={'standard'}>Standard</MenuItem>\r\n              <MenuItem value={'historic'}>Historic</MenuItem>\r\n              <MenuItem value={'pioneer'}>Pioneer</MenuItem>\r\n              <MenuItem value={'modern'}>Modern</MenuItem>\r\n              <MenuItem value={'legacy'}>Legacy</MenuItem>\r\n              <MenuItem value={'pauper'}>Pauper</MenuItem>\r\n              <MenuItem value={'vintage'}>Vintage</MenuItem>\r\n            </TextField>\r\n            <TextField \r\n              select\r\n              fullWidth\r\n              name=\"legal\"\r\n              value={inputs.legal}\r\n              onChange={handleChange}\r\n              style = {{ width: 150, marginTop: 10, marginBottom: 10 }}\r\n            >\r\n              <MenuItem value={'legal'}>Legal</MenuItem>\r\n              <MenuItem value={'restricted'}>Restricted</MenuItem>\r\n              <MenuItem value={'banned'}>Banned</MenuItem>\r\n            </TextField>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl>\r\n            <TextField\r\n              name=\"set\"\r\n              value={inputs.set}\r\n              onChange={handleChange}\r\n              label=\"Set\"\r\n              style = {{ margin: 10 }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl sx={ { flexDirection: \"row\" } }>\r\n            <FormControlLabel control={ <Checkbox name='commonCheck' checked={inputs.commonCheck} onChange={handleCheck}/> } label=\"Common\" style = {{ marginLeft: 10 }} />\r\n            <FormControlLabel control={ <Checkbox name='uncommonCheck' checked={inputs.uncommonCheck} onChange={handleCheck}/> } label=\"Uncommon\" />\r\n            <FormControlLabel control={ <Checkbox name='rareCheck' checked={inputs.rareCheck} onChange={handleCheck}/> } label=\"Rare\" />\r\n            <FormControlLabel control={ <Checkbox name='mythicRareCheck' checked={inputs.mythicRareCheck} onChange={handleCheck}/> } label=\"Mythic Rare\" />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl sx={ { flexDirection: \"row\" } } >\r\n            <TextField\r\n              select\r\n              name=\"currency\"\r\n              value={inputs.currency}\r\n              onChange={handleChange}\r\n              style = {{ marginLeft: 10, marginTop: 10, marginBottom: 10 }}\r\n            >\r\n              <MenuItem value={'usd'}>USD</MenuItem>\r\n              <MenuItem value={'euro'}>Euros</MenuItem>\r\n              <MenuItem value={'tickets'}>MTGO Tickets</MenuItem>\r\n            </TextField>\r\n            <TextField \r\n              select\r\n              name=\"currencyCompare\"\r\n              value={inputs.currencyCompare}\r\n              onChange={handleChange}\r\n              style = {{ marginTop: 10, marginBottom: 10 }}\r\n            >\r\n              <MenuItem value={'lessThan'}>less than</MenuItem>\r\n              <MenuItem value={'greaterThan'}>greater than</MenuItem>\r\n              <MenuItem value={'lessThanOrEqual'}>less than or eqal</MenuItem>\r\n              <MenuItem value={'greaterThanOrEqual'}>greater than or eqal</MenuItem>\r\n            </TextField>\r\n            {inputs.currency === 'usd' ? \r\n              <TextField\r\n              type=\"number\"\r\n              name=\"price\"\r\n              value={inputs.price}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">$</InputAdornment>\r\n                ),\r\n              }}\r\n              style = {{ marginTop: 10, marginBottom: 10 }}\r\n            /> : inputs.currency === 'euro' ? \r\n            <TextField\r\n              type=\"number\"\r\n              name=\"price\"\r\n              value={inputs.price}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">€</InputAdornment>\r\n                ),\r\n              }}\r\n              style = {{ marginTop: 10, marginBottom: 10 }}\r\n            /> :\r\n            <TextField\r\n              type=\"number\"\r\n              name=\"price\"\r\n              value={inputs.price}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">TIX</InputAdornment>\r\n                ),\r\n              }}\r\n              style = {{ marginTop: 10, marginBottom: 10 }}\r\n            />\r\n            }\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      {isFetching ? <LoadingButton loading variant=\"contained\" style = {{ margin: 10 }}>Submit</LoadingButton> : <Button variant=\"contained\" color=\"primary\" type=\"submit\" style = {{ margin: 10 }}>Submit</Button>}\r\n      <Button variant=\"contained\" color=\"secondary\" name=\"reset\" style = {{ margin: 10 }} onClick={resetForm}>Reset</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MtgForm\r\n\r\n{/* <Form onSubmit={handleSubmit}>\r\n          <Form.Input label='Color' placeholder='Red' name='color' onChange={handleChange}/>\r\n          <Form.Input label='CMC' placeholder='1' name='cmc' onChange={handleChange}/>\r\n        <Form.Button>SUBMIT</Form.Button>\r\n      </Form> */}","import React from 'react'\r\nimport MtgForm from './components/MtgForm'\r\nimport { ImageList, ImageListItem, inputUnstyledClasses } from '@mui/material'\r\n\r\n\r\nconst Mtg = () => {\r\n  const [inputs, setInputs] = React.useState([])\r\n  const [cards, setCards] = React.useState([])\r\n  const [isFetching, setIsFetching] = React.useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (input) => {\r\n    function getScryfallCards (nextPage) {\r\n      let colors=[]\r\n      if (input.whiteCheck) {\r\n        colors.push('w')\r\n      }\r\n      if (input.blackCheck) {\r\n        colors.push('b')\r\n      }\r\n      if (input.greenCheck) {\r\n        colors.push('g')\r\n      }\r\n      if (input.redCheck) {\r\n        colors.push('r')\r\n      }\r\n      if (input.blueCheck) {\r\n        colors.push('u')\r\n      }\r\n\r\n      let colorString = ''\r\n\r\n      colorString = colors.join('')\r\n\r\n      let lookup = []\r\n\r\n      if (input.name !== '') {\r\n        lookup.push(`${input.name}`)\r\n      }\r\n\r\n      if (input.text !== '') {\r\n        lookup.push(encodeURIComponent(`oracle=${input.text}`))\r\n      }\r\n\r\n      if (input.type !== '') {\r\n        lookup.push(encodeURIComponent(`t=${input.type}`))\r\n      }\r\n\r\n      if (colorString !== '') {\r\n        if (input.andor === 'and') {\r\n          lookup.push(encodeURIComponent(`c=${colorString}`))\r\n        } else {\r\n          lookup.push(encodeURIComponent(`c<=${colorString}`))\r\n        }\r\n      }\r\n\r\n      if(input.cmc !== '') {\r\n        lookup.push(encodeURIComponent(`cmc=${input.cmc}`))\r\n      }\r\n\r\n      if(input.power !== '') {\r\n        lookup.push(encodeURIComponent(`pow=${input.power}`))\r\n      }\r\n\r\n      if(input.toughness !== '') {\r\n        lookup.push(encodeURIComponent(`tou=${input.toughness}`))\r\n      }\r\n\r\n      if(input.format !== '') {\r\n        if(input.legal === 'legal') {\r\n          lookup.push(encodeURIComponent(`f=${input.format}`))\r\n        } else if (input.legal === 'restricted') {\r\n          lookup.push(encodeURIComponent(`restricted=${input.format}`))\r\n        } else {\r\n          lookup.push(encodeURIComponent(`banned=${input.format}`))\r\n        }\r\n      }\r\n\r\n      if(input.set !== '') {\r\n        lookup.push(encodeURIComponent(`e=${input.set}`))\r\n      }\r\n\r\n      let rarities=[]\r\n      \r\n      if (input.commonCheck) {\r\n        rarities.push('rarity%3Dc')\r\n      }\r\n      if (input.uncommonCheck) {\r\n        rarities.push('rarity%3Du')\r\n      }\r\n      if (input.rareCheck) {\r\n        rarities.push('rarity%3Dr')\r\n      }\r\n      if (input.mythicRareCheck) {\r\n        rarities.push('rarity%3Dm')\r\n      }\r\n\r\n      let rarityString = ''\r\n\r\n      rarityString = rarities.join('+OR+')\r\n\r\n      if(rarityString !== '') {\r\n        lookup.push(`%28${rarityString}%29`)\r\n      }\r\n\r\n      if (input.price !== '') {\r\n        let priceString = ''\r\n\r\n        console.log(`input.price: ${input.price}`)\r\n\r\n        console.log(`priceString1: ${priceString}`)\r\n\r\n        if (input.currency === 'usd') {\r\n          priceString = priceString.concat('usd')\r\n        } else if (input.currency === 'euro') {\r\n          priceString = priceString.concat('euro')\r\n        } else {\r\n          priceString = priceString.concat('tix')\r\n        }\r\n\r\n        console.log(`priceString2: ${priceString}`)\r\n\r\n        if (input.currencyCompare === 'lessThan') {\r\n          priceString = priceString.concat(`<${input.price}`)\r\n        } else if (input.currencyCompare === 'greaterThan') {\r\n          priceString = priceString.concat(`>${input.price}`)\r\n        } else if (input.currencyCompare === 'lessThanOrEqual') {\r\n          priceString = priceString.concat(`<=${input.price}`)\r\n        } else {\r\n          priceString = priceString.concat(`>=${input.price}`)\r\n        }\r\n\r\n        console.log(`priceString3: ${priceString}`)\r\n\r\n        lookup.push(encodeURIComponent(`${priceString}`))\r\n      }\r\n\r\n      let lookupString = lookup.join('+')\r\n\r\n      if (lookupString !== '') {\r\n        try {\r\n          if (nextPage) {\r\n            fetch(nextPage)\r\n              .then(response => response.json())\r\n              .then(data => {\r\n                setCards( cards => {\r\n                  return [...cards, ...data.data]\r\n                })\r\n                if (data.has_more) {\r\n                  setTimeout(function(){getScryfallCards(data.next_page)}, 100)\r\n                } else {\r\n                  setIsFetching(false)\r\n                }\r\n              })\r\n          } else {\r\n            setIsFetching(true)\r\n            fetch(`https://api.scryfall.com/cards/search?q=${lookupString}`)\r\n              .then(response => response.json())\r\n              .then(data => {\r\n                setCards(data.data)\r\n                if (data.has_more) {\r\n                  setTimeout(function(){getScryfallCards(data.next_page)}, 100)\r\n                } else {\r\n                  setIsFetching(false)\r\n                }\r\n              })\r\n          }\r\n        }\r\n        catch (error) {\r\n          console.log(`error: ${error}`)\r\n        }\r\n      }\r\n      else {\r\n        console.log('error')\r\n      }\r\n    }\r\n\r\n    async function getCards () {\r\n      let colors=[]\r\n      if (input.whiteCheck) {\r\n        colors.push('white')\r\n      }\r\n      if (input.blackCheck) {\r\n        colors.push('black')\r\n      }\r\n      if (input.greenCheck) {\r\n        colors.push('green')\r\n      }\r\n      if (input.redCheck) {\r\n        colors.push('red')\r\n      }\r\n      if (input.blueCheck) {\r\n        colors.push('blue')\r\n      }\r\n\r\n      let colorString = ''\r\n\r\n      if (input.andor === 'and') {\r\n        colorString = colors.join(',')\r\n      } else {\r\n        colorString = colors.join('|')\r\n      }\r\n\r\n      let lookup = []\r\n\r\n      if (colorString !== '') {\r\n        lookup.push(`colors=${colorString}`)\r\n      }\r\n\r\n      if(input.cmc) {\r\n        lookup.push(`cmc=${input.cmc}`)\r\n      }\r\n\r\n      let lookupString = lookup.join('+')\r\n\r\n      console.log(`lookupString: ${lookupString}`)\r\n\r\n      if (lookupString !== '') {\r\n        try {\r\n          const res = await fetch(`https://api.magicthegathering.io/v1/cards?${lookupString}`)\r\n          // const res = await fetch(`https://api.scryfall.com/cards/search?${lookupString}`)\r\n          const data = await res.json()\r\n\r\n          setCards(data.cards)\r\n        }\r\n        catch (error) {\r\n          console.log(`error: ${error}`)\r\n        }\r\n      }\r\n      else {\r\n        console.log('error')\r\n      }\r\n    }\r\n    getScryfallCards()\r\n  }\r\n\r\n  if (cards && cards.length > 0) {\r\n    return(\r\n      <div>\r\n        <MtgForm \r\n          handleSubmit={(e, input) => {\r\n            e.preventDefault()\r\n            handleSubmit(input)\r\n          }}\r\n          isFetching={isFetching}\r\n        />\r\n        <div>\r\n          <ImageList cols={8}>\r\n          {cards.map(card => (\r\n            card?.image_uris?.normal ?\r\n                <ImageListItem>\r\n                  <img\r\n                    src={card?.image_uris?.normal}\r\n                    loading=\"lazy\"\r\n                  />\r\n                </ImageListItem> :\r\n\r\n                card?.card_faces[0]?.image_uris.normal ?\r\n                  <ImageListItem>\r\n                  <img\r\n                    src={card?.card_faces[0]?.image_uris.normal}\r\n                    loading=\"lazy\"\r\n                  />\r\n                  </ImageListItem> :\r\n\r\n                    null\r\n            ))}\r\n          </ImageList>\r\n        </div> \r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <div>\r\n        <MtgForm\r\n          handleSubmit={(e, input) => {\r\n            e.preventDefault()\r\n            handleSubmit(input)\r\n          }}\r\n          isFetching={isFetching}\r\n        />\r\n        </div>)\r\n  }\r\n}\r\nexport default Mtg\r\n\r\n{/* <ImageList cols={8}>\r\n            {cards.map(card => (\r\n              card['image_uris']['normal'] ?\r\n                <ImageListItem>\r\n                  <img\r\n                    src={card['image_uris']['normal']}\r\n                  />\r\n                </ImageListItem> :\r\n                null\r\n            ))}\r\n            </ImageList> */}\r\n","import React from \"react\"\r\nimport Home from \"./pages/home/Home.js\"\r\nimport MemeGenerator from \"./pages/projects/meme-generator/MemeGenerator\"\r\nimport BitcoinTester from \"./pages/projects/bitcoin-tester/BitcoinTester\";\r\nimport CryptoCharts from \"./pages/projects/crypto-charts/CryptoCharts\"\r\nimport Mtg from \"./pages/projects/mtg/Mtg\"\r\nimport Navbar from \"./components/Navbar/Navbar\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Home />}/>\r\n          <Route exact path=\"/projects/meme-generator\" element={<MemeGenerator />}/>\r\n          <Route exact path=\"/projects/bitcoin-tester\" element={<BitcoinTester />}/>\r\n          <Route exact path=\"/projects/crypto-charts\" element={<CryptoCharts />}/>\r\n          <Route exact path=\"/projects/mtg\" element={<Mtg />}/>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}